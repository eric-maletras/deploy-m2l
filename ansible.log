2025-01-07 23:01:25,541 p=1221 u=root n=ansible | PLAY [Test win_ping on windows] ***************************************************************************************************************************************************************************
2025-01-07 23:01:25,613 p=1221 u=root n=ansible | TASK [Test connection with ping] **************************************************************************************************************************************************************************
2025-01-07 23:01:35,680 p=1221 u=root n=ansible | fatal: [M2L-WSRV01]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: ssh: connect to host 192.168.62.130 port 22: Connection timed out", "unreachable": true}
2025-01-07 23:01:35,681 p=1221 u=root n=ansible | PLAY RECAP ************************************************************************************************************************************************************************************************
2025-01-07 23:01:35,682 p=1221 u=root n=ansible | M2L-WSRV01                 : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2025-01-07 23:03:52,228 p=1227 u=root n=ansible | [WARNING]: Could not match supplied host pattern, ignoring: windows

2025-01-07 23:03:52,228 p=1227 u=root n=ansible | [WARNING]: No hosts matched, nothing to do

2025-01-07 23:10:33,366 p=1242 u=root n=ansible | M2L-WSRV01 | SUCCESS => {
    "ansible_connection": "winrm"
}
2025-01-07 23:10:33,385 p=1242 u=root n=ansible | M2L-WSRV02 | SUCCESS => {
    "ansible_connection": "winrm"
}
2025-01-07 23:10:43,009 p=1247 u=root n=ansible | PLAY [Test win_ping on windows] ***************************************************************************************************************************************************************************
2025-01-07 23:10:43,040 p=1247 u=root n=ansible | TASK [Test connection with ping] **************************************************************************************************************************************************************************
2025-01-07 23:10:50,571 p=1247 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-07 23:10:50,572 p=1247 u=root n=ansible | PLAY RECAP ************************************************************************************************************************************************************************************************
2025-01-07 23:10:50,573 p=1247 u=root n=ansible | M2L-WSRV01                 : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-01-07 23:15:41,557 p=1251 u=root n=ansible | PLAY [Test win_ping on windows] ***************************************************************************************************************************************************************************
2025-01-07 23:15:41,593 p=1251 u=root n=ansible | TASK [Test connection with ping] **************************************************************************************************************************************************************************
2025-01-07 23:15:45,329 p=1251 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-07 23:15:45,331 p=1251 u=root n=ansible | PLAY RECAP ************************************************************************************************************************************************************************************************
2025-01-07 23:15:45,332 p=1251 u=root n=ansible | M2L-WSRV01                 : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-01-07 23:18:32,616 p=1281 u=root n=ansible | ERROR! We were unable to read either as JSON nor YAML, these are the errors we got from each:
JSON: Expecting value: line 1 column 1 (char 0)

Syntax Error while loading YAML.
  mapping values are not allowed in this context. mapping values are not allowed in this context
  in "<unicode string>", line 4, column 31

The error appears to be in '/var/ansible-projects/deploy-m2l/roles/win_ping/tasks/main.yml': line 4, column 31, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

 - name: Test connection with ping
      ansible.windows.win_ping:
                              ^ here

2025-01-07 23:19:15,367 p=1284 u=root n=ansible | PLAY [Test win_ping on windows] ***************************************************************************************************************************************************************************
2025-01-07 23:19:15,396 p=1284 u=root n=ansible | TASK [win_ping : Test connection with ping] ***************************************************************************************************************************************************************
2025-01-07 23:19:19,260 p=1284 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-07 23:19:19,268 p=1284 u=root n=ansible | PLAY RECAP ************************************************************************************************************************************************************************************************
2025-01-07 23:19:19,268 p=1284 u=root n=ansible | M2L-WSRV01                 : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-01-08 22:34:18,043 p=1057 u=root n=ansible | PLAY [Test win_ping on windows] ****************************************************************************************************************************************
2025-01-08 22:34:18,139 p=1057 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] *****************************************************************************************************************************
2025-01-08 22:35:08,481 p=1057 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-08 22:35:08,485 p=1057 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] *********************************************************************************************************
2025-01-08 22:35:16,731 p=1057 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"changed": false, "msg": "Unsupported parameters for (ansible.windows.win_dns_zone) module: zone_type. Supported parameters include: forwarder_timeout, name, dns_servers, dynamic_update, type, state, replication"}
2025-01-08 22:35:16,732 p=1057 u=root n=ansible | PLAY RECAP *************************************************************************************************************************************************************
2025-01-08 22:35:16,732 p=1057 u=root n=ansible | M2L-WSRV01                 : ok=1    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-08 22:44:55,768 p=1074 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-08 22:44:55,800 p=1074 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-08 22:44:58,412 p=1074 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 22:44:58,415 p=1074 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-08 22:45:08,750 p=1074 u=root n=ansible | [WARNING]: Secure DNS updates are available only for Active Directory-integrated zones

2025-01-08 22:45:08,753 p=1074 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-08 22:45:08,756 p=1074 u=root n=ansible | TASK [install_dns : Créer une zone de recherche indirecte (ZRI)] ********************************************************************************************************************************
2025-01-08 22:45:11,353 p=1074 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"changed": false, "msg": "Unsupported parameters for (ansible.windows.win_dns_zone) module: is_reverse. Supported parameters include: forwarder_timeout, name, dns_servers, dynamic_update, type, state, replication"}
2025-01-08 22:45:11,354 p=1074 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-08 22:45:11,355 p=1074 u=root n=ansible | M2L-WSRV01                 : ok=2    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-08 22:48:01,483 p=1095 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-08 22:48:01,516 p=1095 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-08 22:48:04,167 p=1095 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 22:48:04,169 p=1095 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-08 22:48:08,676 p=1095 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"changed": false, "msg": "Failed to set properties on the zone m2l.lan: Impossible de valider l'argument sur le paramètre « ReplicationScope ». L'argument « None » n'appartient pas au jeu « Forest;Domain;Legacy;Custom » spécifié par l'attribut ValidateSet. Indiquez un argument qui se trouve dans le jeu et réessayez."}
2025-01-08 22:48:08,677 p=1095 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-08 22:48:08,678 p=1095 u=root n=ansible | M2L-WSRV01                 : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-08 22:49:57,130 p=1102 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-08 22:49:57,163 p=1102 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-08 22:49:59,558 p=1102 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 22:49:59,561 p=1102 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-08 22:50:02,297 p=1102 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"changed": false, "msg": "Unsupported parameters for (ansible.windows.win_dns_zone) module: ReplicationScope. Supported parameters include: forwarder_timeout, name, dns_servers, dynamic_update, type, state, replication"}
2025-01-08 22:50:02,298 p=1102 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-08 22:50:02,298 p=1102 u=root n=ansible | M2L-WSRV01                 : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-08 22:50:28,859 p=1109 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-08 22:50:28,891 p=1109 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-08 22:50:31,095 p=1109 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 22:50:31,098 p=1109 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-08 22:50:35,276 p=1109 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"changed": false, "msg": "Converting a file backed DNS zone to Active Directory integrated zone is unsupported"}
2025-01-08 22:50:35,278 p=1109 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-08 22:50:35,278 p=1109 u=root n=ansible | M2L-WSRV01                 : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-08 22:51:09,699 p=1115 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-08 22:51:09,734 p=1115 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-08 22:51:12,181 p=1115 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 22:51:12,184 p=1115 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-08 22:51:16,245 p=1115 u=root n=ansible | [WARNING]: Secure DNS updates are available only for Active Directory-integrated zones

2025-01-08 22:51:16,246 p=1115 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"changed": false, "msg": "Failed to set properties on the zone m2l.lan: Impossible de valider l'argument sur le paramètre « DynamicUpdate ». L'argument «  » n'appartient pas au jeu « None;Secure;NonsecureAndSecure » spécifié par l'attribut ValidateSet. Indiquez un argument qui se trouve dans le jeu et réessayez."}
2025-01-08 22:51:16,248 p=1115 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-08 22:51:16,248 p=1115 u=root n=ansible | M2L-WSRV01                 : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-08 22:51:59,189 p=1121 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-08 22:51:59,222 p=1121 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-08 22:52:01,420 p=1121 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 22:52:01,423 p=1121 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-08 22:52:05,415 p=1121 u=root n=ansible | [WARNING]: Secure DNS updates are available only for Active Directory-integrated zones

2025-01-08 22:52:05,416 p=1121 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"changed": false, "msg": "Failed to set properties on the zone m2l.lan: Impossible de valider l'argument sur le paramètre « DynamicUpdate ». L'argument «  » n'appartient pas au jeu « None;Secure;NonsecureAndSecure » spécifié par l'attribut ValidateSet. Indiquez un argument qui se trouve dans le jeu et réessayez."}
2025-01-08 22:52:05,418 p=1121 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-08 22:52:05,419 p=1121 u=root n=ansible | M2L-WSRV01                 : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-08 22:56:37,794 p=1127 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-08 22:56:37,825 p=1127 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-08 22:58:06,145 p=1127 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-08 22:58:06,148 p=1127 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-08 22:58:23,508 p=1127 u=root n=ansible | [WARNING]: Secure DNS updates are available only for Active Directory-integrated zones

2025-01-08 22:58:23,508 p=1127 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-08 22:58:23,510 p=1127 u=root n=ansible | TASK [install_dns : Créer une zone de recherche indirecte (ZRI)] ********************************************************************************************************************************
2025-01-08 22:58:29,443 p=1127 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-08 22:58:29,446 p=1127 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements A] **********************************************************************************************************************************************
2025-01-08 22:58:29,485 p=1127 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"msg": "The task includes an option with an undefined variable.. 'item' is undefined\n\nThe error appears to be in '/var/ansible-projects/deploy-m2l/roles/install_dns/tasks/main.yml': line 26, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Ajouter des enregistrements A\n  ^ here\n"}
2025-01-08 22:58:29,493 p=1127 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-08 22:58:29,495 p=1127 u=root n=ansible | M2L-WSRV01                 : ok=3    changed=3    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-08 23:04:23,626 p=1136 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-08 23:04:23,638 p=1136 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-08 23:04:29,624 p=1136 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:04:29,627 p=1136 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-08 23:04:41,784 p=1136 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"changed": false, "msg": "Failed to set properties on the zone m2l.lan: Impossible de valider l'argument sur le paramètre « ReplicationScope ». L'argument « None » n'appartient pas au jeu « Forest;Domain;Legacy;Custom » spécifié par l'attribut ValidateSet. Indiquez un argument qui se trouve dans le jeu et réessayez."}
2025-01-08 23:04:41,785 p=1136 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-08 23:04:41,786 p=1136 u=root n=ansible | M2L-WSRV01                 : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-08 23:06:04,193 p=1143 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-08 23:06:04,204 p=1143 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-08 23:06:06,810 p=1143 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:06:06,813 p=1143 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-08 23:06:09,560 p=1143 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"changed": false, "msg": "value of replication must be one of: forest, domain, legacy, none. Got no match for: noneo"}
2025-01-08 23:06:09,561 p=1143 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-08 23:06:09,562 p=1143 u=root n=ansible | M2L-WSRV01                 : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-08 23:06:29,797 p=1150 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-08 23:06:29,809 p=1150 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-08 23:06:32,184 p=1150 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:06:32,187 p=1150 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-08 23:06:37,217 p=1150 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:06:37,219 p=1150 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-08 23:06:42,097 p=1150 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"changed": true, "cmd": "Set-DnsServerZone -Name \"m2l.lan\" -DynamicUpdate NonsecureAndSecure", "delta": "0:00:02.187464", "end": "2025-01-08 22:06:41.915628", "msg": "non-zero return code", "rc": 1, "start": "2025-01-08 22:06:39.728164", "stderr": "Set-DnsServerZone : Le terme «Set-DnsServerZone» n'est pas reconnu comme nom d'applet de commande, fonction, fichier \r\nde script ou programme exécutable. Vérifiez l'orthographe du nom, ou si un chemin d'accès existe, vérifiez que le \r\nchemin d'accès est correct et réessayez.\r\nAu caractère Ligne:1 : 65\r\n+ ... ding = New-Object Text.UTF8Encoding $false; Set-DnsServerZone -Name \" ...\r\n+                                                 ~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (Set-DnsServerZone:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException", "stderr_lines": ["Set-DnsServerZone : Le terme «Set-DnsServerZone» n'est pas reconnu comme nom d'applet de commande, fonction, fichier ", "de script ou programme exécutable. Vérifiez l'orthographe du nom, ou si un chemin d'accès existe, vérifiez que le ", "chemin d'accès est correct et réessayez.", "Au caractère Ligne:1 : 65", "+ ... ding = New-Object Text.UTF8Encoding $false; Set-DnsServerZone -Name \" ...", "+                                                 ~~~~~~~~~~~~~~~~~", "    + CategoryInfo          : ObjectNotFound: (Set-DnsServerZone:String) [], CommandNotFoundException", "    + FullyQualifiedErrorId : CommandNotFoundException"], "stdout": "", "stdout_lines": []}
2025-01-08 23:06:42,099 p=1150 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-08 23:06:42,099 p=1150 u=root n=ansible | M2L-WSRV01                 : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-08 23:09:49,881 p=1159 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-08 23:09:49,895 p=1159 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-08 23:09:53,270 p=1159 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:09:53,273 p=1159 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-08 23:09:59,367 p=1159 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:09:59,370 p=1159 u=root n=ansible | TASK [install_dns : Importer le module DnsServer] ***********************************************************************************************************************************************
2025-01-08 23:10:05,062 p=1159 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-08 23:10:05,065 p=1159 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-08 23:10:08,869 p=1159 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"changed": true, "cmd": "Set-DnsServerZone -Name \"m2l.lan\" -DynamicUpdate NonsecureAndSecure", "delta": "0:00:01.359279", "end": "2025-01-08 22:10:08.695849", "msg": "non-zero return code", "rc": 1, "start": "2025-01-08 22:10:07.336570", "stderr": "Set-DnsServerZone : Le terme «Set-DnsServerZone» n'est pas reconnu comme nom d'applet de commande, fonction, fichier \r\nde script ou programme exécutable. Vérifiez l'orthographe du nom, ou si un chemin d'accès existe, vérifiez que le \r\nchemin d'accès est correct et réessayez.\r\nAu caractère Ligne:1 : 65\r\n+ ... ding = New-Object Text.UTF8Encoding $false; Set-DnsServerZone -Name \" ...\r\n+                                                 ~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (Set-DnsServerZone:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException", "stderr_lines": ["Set-DnsServerZone : Le terme «Set-DnsServerZone» n'est pas reconnu comme nom d'applet de commande, fonction, fichier ", "de script ou programme exécutable. Vérifiez l'orthographe du nom, ou si un chemin d'accès existe, vérifiez que le ", "chemin d'accès est correct et réessayez.", "Au caractère Ligne:1 : 65", "+ ... ding = New-Object Text.UTF8Encoding $false; Set-DnsServerZone -Name \" ...", "+                                                 ~~~~~~~~~~~~~~~~~", "    + CategoryInfo          : ObjectNotFound: (Set-DnsServerZone:String) [], CommandNotFoundException", "    + FullyQualifiedErrorId : CommandNotFoundException"], "stdout": "", "stdout_lines": []}
2025-01-08 23:10:08,871 p=1159 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-08 23:10:08,871 p=1159 u=root n=ansible | M2L-WSRV01                 : ok=3    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-08 23:18:06,642 p=1172 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-08 23:18:06,653 p=1172 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-08 23:18:10,996 p=1172 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:18:10,998 p=1172 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-08 23:18:16,013 p=1172 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:18:16,017 p=1172 u=root n=ansible | TASK [install_dns : Importer le module DnsServer] ***********************************************************************************************************************************************
2025-01-08 23:18:21,202 p=1172 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-08 23:18:21,206 p=1172 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-08 23:18:24,173 p=1172 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"changed": true, "cmd": "Set-DnsServerSettings -DynamicUpdate NonsecureAndSecure", "delta": "0:00:00.765444", "end": "2025-01-08 22:18:24.027411", "msg": "non-zero return code", "rc": 1, "start": "2025-01-08 22:18:23.261966", "stderr": "Set-DnsServerSettings : Le terme «Set-DnsServerSettings» n'est pas reconnu comme nom d'applet de commande, fonction, \r\nfichier de script ou programme exécutable. Vérifiez l'orthographe du nom, ou si un chemin d'accès existe, vérifiez que \r\nle chemin d'accès est correct et réessayez.\r\nAu caractère Ligne:1 : 65\r\n+ ...  = New-Object Text.UTF8Encoding $false; Set-DnsServerSettings -Dynami ...\r\n+                                             ~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (Set-DnsServerSettings:String) [], CommandNotFoundException\r\n    + FullyQualifiedErrorId : CommandNotFoundException", "stderr_lines": ["Set-DnsServerSettings : Le terme «Set-DnsServerSettings» n'est pas reconnu comme nom d'applet de commande, fonction, ", "fichier de script ou programme exécutable. Vérifiez l'orthographe du nom, ou si un chemin d'accès existe, vérifiez que ", "le chemin d'accès est correct et réessayez.", "Au caractère Ligne:1 : 65", "+ ...  = New-Object Text.UTF8Encoding $false; Set-DnsServerSettings -Dynami ...", "+                                             ~~~~~~~~~~~~~~~~~~~~~", "    + CategoryInfo          : ObjectNotFound: (Set-DnsServerSettings:String) [], CommandNotFoundException", "    + FullyQualifiedErrorId : CommandNotFoundException"], "stdout": "", "stdout_lines": []}
2025-01-08 23:18:24,175 p=1172 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-08 23:18:24,175 p=1172 u=root n=ansible | M2L-WSRV01                 : ok=3    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-08 23:18:51,461 p=1180 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-08 23:18:51,471 p=1180 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-08 23:18:53,740 p=1180 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:18:53,743 p=1180 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-08 23:18:57,626 p=1180 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:18:57,628 p=1180 u=root n=ansible | TASK [install_dns : Importer le module DnsServer] ***********************************************************************************************************************************************
2025-01-08 23:19:01,466 p=1180 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-08 23:19:01,470 p=1180 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-08 23:19:05,442 p=1180 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"changed": true, "cmd": "Set-DnsServerSetting -DynamicUpdate NonsecureAndSecure", "delta": "0:00:01.859015", "end": "2025-01-08 22:19:05.308549", "msg": "non-zero return code", "rc": 1, "start": "2025-01-08 22:19:03.449534", "stderr": "Set-DnsServerSetting : Impossible de trouver un paramètre correspondant au nom « DynamicUpdate ».\r\nAu caractère Ligne:1 : 86\r\n+ ... Text.UTF8Encoding $false; Set-DnsServerSetting -DynamicUpdate Nonsecu ...\r\n+                                                    ~~~~~~~~~~~~~~\r\n    + CategoryInfo          : InvalidArgument : (:) [Set-DnsServerSetting], ParameterBindingException\r\n    + FullyQualifiedErrorId : NamedParameterNotFound,Set-DnsServerSetting", "stderr_lines": ["Set-DnsServerSetting : Impossible de trouver un paramètre correspondant au nom « DynamicUpdate ».", "Au caractère Ligne:1 : 86", "+ ... Text.UTF8Encoding $false; Set-DnsServerSetting -DynamicUpdate Nonsecu ...", "+                                                    ~~~~~~~~~~~~~~", "    + CategoryInfo          : InvalidArgument : (:) [Set-DnsServerSetting], ParameterBindingException", "    + FullyQualifiedErrorId : NamedParameterNotFound,Set-DnsServerSetting"], "stdout": "", "stdout_lines": []}
2025-01-08 23:19:05,444 p=1180 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-08 23:19:05,444 p=1180 u=root n=ansible | M2L-WSRV01                 : ok=3    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-08 23:33:25,280 p=1191 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-08 23:33:25,318 p=1191 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-08 23:33:28,199 p=1191 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:33:28,202 p=1191 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-08 23:33:32,539 p=1191 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:33:32,542 p=1191 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-08 23:33:32,562 p=1191 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-08 23:33:32,564 p=1191 u=root n=ansible | TASK [install_dns : Créer une zone de recherche indirecte (ZRI)] ********************************************************************************************************************************
2025-01-08 23:33:36,520 p=1191 u=root n=ansible | [WARNING]: Secure DNS updates are available only for Active Directory-integrated zones

2025-01-08 23:33:36,521 p=1191 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"changed": false, "msg": "Failed to set properties on the zone 172.16.in-addr.arpa: Impossible de valider l'argument sur le paramètre « DynamicUpdate ». L'argument «  » n'appartient pas au jeu « None;Secure;NonsecureAndSecure » spécifié par l'attribut ValidateSet. Indiquez un argument qui se trouve dans le jeu et réessayez."}
2025-01-08 23:33:36,523 p=1191 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-08 23:33:36,524 p=1191 u=root n=ansible | M2L-WSRV01                 : ok=2    changed=0    unreachable=0    failed=1    skipped=1    rescued=0    ignored=0   
2025-01-08 23:34:44,311 p=1199 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-08 23:34:44,345 p=1199 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-08 23:34:46,814 p=1199 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:34:46,818 p=1199 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-08 23:34:50,969 p=1199 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:34:50,972 p=1199 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-08 23:34:50,991 p=1199 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-08 23:34:50,993 p=1199 u=root n=ansible | TASK [install_dns : Créer une zone de recherche indirecte (ZRI)] ********************************************************************************************************************************
2025-01-08 23:34:55,038 p=1199 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:34:55,043 p=1199 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-08 23:34:55,064 p=1199 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-08 23:34:55,067 p=1199 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements A] **********************************************************************************************************************************************
2025-01-08 23:34:55,088 p=1199 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"msg": "The task includes an option with an undefined variable.. 'item' is undefined\n\nThe error appears to be in '/var/ansible-projects/deploy-m2l/roles/install_dns/tasks/main.yml': line 47, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Ajouter des enregistrements A\n  ^ here\n"}
2025-01-08 23:34:55,089 p=1199 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-08 23:34:55,089 p=1199 u=root n=ansible | M2L-WSRV01                 : ok=3    changed=0    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
2025-01-08 23:37:05,876 p=1221 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-08 23:37:05,910 p=1221 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-08 23:37:08,382 p=1221 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:37:08,385 p=1221 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-08 23:37:12,593 p=1221 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:37:12,596 p=1221 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-08 23:37:12,619 p=1221 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-08 23:37:12,621 p=1221 u=root n=ansible | TASK [install_dns : Créer une zone de recherche indirecte (ZRI)] ********************************************************************************************************************************
2025-01-08 23:37:16,528 p=1221 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:37:16,531 p=1221 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-08 23:37:16,552 p=1221 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-08 23:37:16,554 p=1221 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements A] **********************************************************************************************************************************************
2025-01-08 23:37:16,577 p=1221 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"msg": "The task includes an option with an undefined variable.. 'item' is undefined\n\nThe error appears to be in '/var/ansible-projects/deploy-m2l/roles/install_dns/tasks/main.yml': line 47, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Ajouter des enregistrements A\n  ^ here\n"}
2025-01-08 23:37:16,578 p=1221 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-08 23:37:16,578 p=1221 u=root n=ansible | M2L-WSRV01                 : ok=3    changed=0    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
2025-01-08 23:44:23,458 p=1235 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-08 23:44:23,490 p=1235 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-08 23:44:26,360 p=1235 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:44:26,364 p=1235 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-08 23:44:30,778 p=1235 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:44:30,780 p=1235 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-08 23:44:30,799 p=1235 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-08 23:44:30,801 p=1235 u=root n=ansible | TASK [install_dns : Créer une zone de recherche indirecte (ZRI)] ********************************************************************************************************************************
2025-01-08 23:44:34,723 p=1235 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:44:34,727 p=1235 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-08 23:44:34,749 p=1235 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-08 23:44:34,751 p=1235 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements A] **********************************************************************************************************************************************
2025-01-08 23:44:34,769 p=1235 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"msg": "'ns_a_records' is undefined"}
2025-01-08 23:44:34,770 p=1235 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-08 23:44:34,771 p=1235 u=root n=ansible | M2L-WSRV01                 : ok=3    changed=0    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
2025-01-08 23:46:39,881 p=1246 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-08 23:46:39,892 p=1246 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-08 23:46:42,385 p=1246 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:46:42,388 p=1246 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-08 23:46:46,548 p=1246 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:46:46,550 p=1246 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-08 23:46:46,569 p=1246 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-08 23:46:46,572 p=1246 u=root n=ansible | TASK [install_dns : Créer une zone de recherche indirecte (ZRI)] ********************************************************************************************************************************
2025-01-08 23:46:50,500 p=1246 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:46:50,503 p=1246 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-08 23:46:50,524 p=1246 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-08 23:46:50,529 p=1246 u=root n=ansible | TASK [install_dns : Debugging ns_a_records] *****************************************************************************************************************************************************
2025-01-08 23:46:50,554 p=1246 u=root n=ansible | ok: [M2L-WSRV01] => {
    "ns_a_records": "VARIABLE IS NOT DEFINED!"
}
2025-01-08 23:46:50,556 p=1246 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements A] **********************************************************************************************************************************************
2025-01-08 23:46:50,574 p=1246 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"msg": "'ns_a_records' is undefined"}
2025-01-08 23:46:50,575 p=1246 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-08 23:46:50,575 p=1246 u=root n=ansible | M2L-WSRV01                 : ok=4    changed=0    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
2025-01-08 23:51:57,577 p=1266 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-08 23:51:57,589 p=1266 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-08 23:52:00,379 p=1266 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:52:00,383 p=1266 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-08 23:52:04,742 p=1266 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:52:04,746 p=1266 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-08 23:52:04,767 p=1266 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-08 23:52:04,769 p=1266 u=root n=ansible | TASK [install_dns : Créer une zone de recherche indirecte (ZRI)] ********************************************************************************************************************************
2025-01-08 23:52:08,717 p=1266 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:52:08,721 p=1266 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-08 23:52:08,740 p=1266 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-08 23:52:08,743 p=1266 u=root n=ansible | TASK [install_dns : Debugging ns_a_records] *****************************************************************************************************************************************************
2025-01-08 23:52:08,769 p=1266 u=root n=ansible | ok: [M2L-WSRV01] => {
    "ns_a_records": [
        {
            "address": "192.168.1.10",
            "name": "www"
        },
        {
            "address": "192.168.1.20",
            "name": "mail"
        }
    ]
}
2025-01-08 23:52:08,771 p=1266 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements A] **********************************************************************************************************************************************
2025-01-08 23:52:11,306 p=1266 u=root n=ansible | failed: [M2L-WSRV01] (item={'name': 'www', 'address': '192.168.1.10'}) => {"ansible_loop_var": "item", "changed": false, "item": {"address": "192.168.1.10", "name": "www"}, "msg": "Unsupported parameters for (ansible.windows.win_dns_record) module: record_type. Supported parameters include: zone, ttl, type, value, weight, state, name, zone_scope, port, aging, priority, computer_name, values"}
2025-01-08 23:52:13,730 p=1266 u=root n=ansible | failed: [M2L-WSRV01] (item={'name': 'mail', 'address': '192.168.1.20'}) => {"ansible_loop_var": "item", "changed": false, "item": {"address": "192.168.1.20", "name": "mail"}, "msg": "Unsupported parameters for (ansible.windows.win_dns_record) module: record_type. Supported parameters include: zone, ttl, type, value, weight, state, name, zone_scope, port, aging, priority, computer_name, values"}
2025-01-08 23:52:13,740 p=1266 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-08 23:52:13,741 p=1266 u=root n=ansible | M2L-WSRV01                 : ok=4    changed=0    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
2025-01-08 23:59:25,894 p=1292 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-08 23:59:25,904 p=1292 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-08 23:59:28,523 p=1292 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:59:28,526 p=1292 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-08 23:59:33,015 p=1292 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:59:33,018 p=1292 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-08 23:59:33,041 p=1292 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-08 23:59:33,043 p=1292 u=root n=ansible | TASK [install_dns : Créer une zone de recherche indirecte (ZRI)] ********************************************************************************************************************************
2025-01-08 23:59:36,904 p=1292 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-08 23:59:36,908 p=1292 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-08 23:59:36,931 p=1292 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-08 23:59:36,933 p=1292 u=root n=ansible | TASK [install_dns : Debugging ns_a_records] *****************************************************************************************************************************************************
2025-01-08 23:59:36,958 p=1292 u=root n=ansible | ok: [M2L-WSRV01] => {
    "ns_a_records": "VARIABLE IS NOT DEFINED!"
}
2025-01-08 23:59:36,960 p=1292 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements A] **********************************************************************************************************************************************
2025-01-08 23:59:36,979 p=1292 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"msg": "'ns_a_records' is undefined"}
2025-01-08 23:59:36,980 p=1292 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-08 23:59:36,981 p=1292 u=root n=ansible | M2L-WSRV01                 : ok=4    changed=0    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
2025-01-09 00:00:43,153 p=1315 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-09 00:00:43,162 p=1315 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-09 00:00:45,497 p=1315 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 00:00:45,501 p=1315 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-09 00:00:49,610 p=1315 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 00:00:49,613 p=1315 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-09 00:00:49,632 p=1315 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-09 00:00:49,635 p=1315 u=root n=ansible | TASK [install_dns : Créer une zone de recherche indirecte (ZRI)] ********************************************************************************************************************************
2025-01-09 00:00:53,489 p=1315 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 00:00:53,494 p=1315 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-09 00:00:53,515 p=1315 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-09 00:00:53,518 p=1315 u=root n=ansible | TASK [install_dns : Debugging ns_a_records] *****************************************************************************************************************************************************
2025-01-09 00:00:53,543 p=1315 u=root n=ansible | ok: [M2L-WSRV01] => {
    "dns_a_records": [
        {
            "address": "172.16.2.59",
            "name": "m2l-lsrv03"
        },
        {
            "address": "172.16.2.58",
            "name": "m2l-lsrv05"
        }
    ]
}
2025-01-09 00:00:53,545 p=1315 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements A] **********************************************************************************************************************************************
2025-01-09 00:00:56,065 p=1315 u=root n=ansible | failed: [M2L-WSRV01] (item={'name': 'm2l-lsrv03', 'address': '172.16.2.59'}) => {"ansible_loop_var": "item", "changed": false, "item": {"address": "172.16.2.59", "name": "m2l-lsrv03"}, "msg": "Unsupported parameters for (ansible.windows.win_dns_record) module: record_type. Supported parameters include: zone, ttl, type, value, weight, state, name, zone_scope, port, aging, priority, computer_name, values"}
2025-01-09 00:00:58,473 p=1315 u=root n=ansible | failed: [M2L-WSRV01] (item={'name': 'm2l-lsrv05', 'address': '172.16.2.58'}) => {"ansible_loop_var": "item", "changed": false, "item": {"address": "172.16.2.58", "name": "m2l-lsrv05"}, "msg": "Unsupported parameters for (ansible.windows.win_dns_record) module: record_type. Supported parameters include: zone, ttl, type, value, weight, state, name, zone_scope, port, aging, priority, computer_name, values"}
2025-01-09 00:00:58,481 p=1315 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-09 00:00:58,482 p=1315 u=root n=ansible | M2L-WSRV01                 : ok=4    changed=0    unreachable=0    failed=1    skipped=2    rescued=0    ignored=0   
2025-01-09 00:03:13,802 p=1326 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-09 00:03:13,835 p=1326 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-09 00:03:16,430 p=1326 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 00:03:16,434 p=1326 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-09 00:03:20,928 p=1326 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 00:03:20,931 p=1326 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-09 00:03:20,952 p=1326 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-09 00:03:20,954 p=1326 u=root n=ansible | TASK [install_dns : Créer une zone de recherche indirecte (ZRI)] ********************************************************************************************************************************
2025-01-09 00:03:24,900 p=1326 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 00:03:24,904 p=1326 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-09 00:03:24,925 p=1326 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-09 00:03:24,927 p=1326 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements A] **********************************************************************************************************************************************
2025-01-09 00:03:29,828 p=1326 u=root n=ansible | changed: [M2L-WSRV01] => (item={'name': 'm2l-lsrv03', 'address': '172.16.2.59'})
2025-01-09 00:03:33,948 p=1326 u=root n=ansible | changed: [M2L-WSRV01] => (item={'name': 'm2l-lsrv05', 'address': '172.16.2.58'})
2025-01-09 00:03:33,957 p=1326 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements CNAME] ******************************************************************************************************************************************
2025-01-09 00:03:38,358 p=1326 u=root n=ansible | changed: [M2L-WSRV01] => (item={'alias': 'glpi.m2l.lan', 'target': 'm2l-lsrv03'})
2025-01-09 00:03:42,504 p=1326 u=root n=ansible | changed: [M2L-WSRV01] => (item={'alias': 'onwcloud.m2l.lan', 'target': 'm2l-lsrv03'})
2025-01-09 00:03:42,519 p=1326 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-09 00:03:42,519 p=1326 u=root n=ansible | M2L-WSRV01                 : ok=5    changed=2    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2025-01-09 00:03:46,125 p=1336 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-09 00:03:46,159 p=1336 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-09 00:03:48,285 p=1336 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 00:03:48,288 p=1336 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-09 00:03:52,159 p=1336 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 00:03:52,162 p=1336 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-09 00:03:52,182 p=1336 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-09 00:03:52,184 p=1336 u=root n=ansible | TASK [install_dns : Créer une zone de recherche indirecte (ZRI)] ********************************************************************************************************************************
2025-01-09 00:03:56,029 p=1336 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 00:03:56,031 p=1336 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-09 00:03:56,050 p=1336 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-09 00:03:56,052 p=1336 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements A] **********************************************************************************************************************************************
2025-01-09 00:03:59,958 p=1336 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'm2l-lsrv03', 'address': '172.16.2.59'})
2025-01-09 00:04:03,731 p=1336 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'm2l-lsrv05', 'address': '172.16.2.58'})
2025-01-09 00:04:03,741 p=1336 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements CNAME] ******************************************************************************************************************************************
2025-01-09 00:04:07,655 p=1336 u=root n=ansible | ok: [M2L-WSRV01] => (item={'alias': 'glpi.m2l.lan', 'target': 'm2l-lsrv03'})
2025-01-09 00:04:11,444 p=1336 u=root n=ansible | ok: [M2L-WSRV01] => (item={'alias': 'onwcloud.m2l.lan', 'target': 'm2l-lsrv03'})
2025-01-09 00:04:11,456 p=1336 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-09 00:04:11,456 p=1336 u=root n=ansible | M2L-WSRV01                 : ok=5    changed=0    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2025-01-09 13:47:21,691 p=1058 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-09 13:47:21,787 p=1058 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-09 13:47:25,005 p=1058 u=root n=ansible | fatal: [M2L-WSRV01]: UNREACHABLE! => {"changed": false, "msg": "plaintext: HTTPConnectionPool(host='192.168.62.130', port=5985): Max retries exceeded with url: /wsman (Caused by NewConnectionError(\"<urllib3.connection.HTTPConnection object at 0x7f7d0632d690>: Failed to establish a new connection: [Errno 113] Aucun chemin d'accès pour atteindre l'hôte cible\"))", "unreachable": true}
2025-01-09 13:47:25,006 p=1058 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-09 13:47:25,007 p=1058 u=root n=ansible | M2L-WSRV01                 : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0   
2025-01-09 13:50:05,725 p=1062 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-09 13:50:05,758 p=1062 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-09 13:50:14,614 p=1062 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 13:50:14,617 p=1062 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-09 13:50:25,873 p=1062 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 13:50:25,878 p=1062 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-09 13:50:25,898 p=1062 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-09 13:50:25,900 p=1062 u=root n=ansible | TASK [install_dns : Créer une zone de recherche indirecte (ZRI)] ********************************************************************************************************************************
2025-01-09 13:50:31,064 p=1062 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 13:50:31,067 p=1062 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-09 13:50:31,087 p=1062 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-09 13:50:31,089 p=1062 u=root n=ansible | TASK [install_dns : Vérifier si le redirecteur existe] ******************************************************************************************************************************************
2025-01-09 13:50:36,488 p=1062 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 13:50:36,491 p=1062 u=root n=ansible | TASK [install_dns : Ajouter le redirecteur si absent] *******************************************************************************************************************************************
2025-01-09 13:50:42,206 p=1062 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 13:50:42,209 p=1062 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements A] **********************************************************************************************************************************************
2025-01-09 13:50:48,513 p=1062 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'm2l-lsrv03', 'address': '172.16.2.59'})
2025-01-09 13:50:53,455 p=1062 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'm2l-lsrv05', 'address': '172.16.2.58'})
2025-01-09 13:50:53,465 p=1062 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements CNAME] ******************************************************************************************************************************************
2025-01-09 13:50:58,354 p=1062 u=root n=ansible | ok: [M2L-WSRV01] => (item={'alias': 'glpi.m2l.lan', 'target': 'm2l-lsrv03'})
2025-01-09 13:51:03,009 p=1062 u=root n=ansible | ok: [M2L-WSRV01] => (item={'alias': 'onwcloud.m2l.lan', 'target': 'm2l-lsrv03'})
2025-01-09 13:51:03,024 p=1062 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-09 13:51:03,024 p=1062 u=root n=ansible | M2L-WSRV01                 : ok=7    changed=2    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2025-01-09 13:52:06,766 p=1074 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-09 13:52:06,799 p=1074 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-09 13:52:09,975 p=1074 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 13:52:09,977 p=1074 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-09 13:52:14,623 p=1074 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 13:52:14,626 p=1074 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-09 13:52:14,649 p=1074 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-09 13:52:14,652 p=1074 u=root n=ansible | TASK [install_dns : Créer une zone de recherche indirecte (ZRI)] ********************************************************************************************************************************
2025-01-09 13:52:19,137 p=1074 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 13:52:19,140 p=1074 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-09 13:52:19,158 p=1074 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-09 13:52:19,160 p=1074 u=root n=ansible | TASK [install_dns : Vérifier si le redirecteur existe] ******************************************************************************************************************************************
2025-01-09 13:52:23,849 p=1074 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 13:52:23,852 p=1074 u=root n=ansible | TASK [install_dns : Ajouter le redirecteur si absent] *******************************************************************************************************************************************
2025-01-09 13:52:28,560 p=1074 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 13:52:28,562 p=1074 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements A] **********************************************************************************************************************************************
2025-01-09 13:52:33,319 p=1074 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'm2l-lsrv03', 'address': '172.16.2.59'})
2025-01-09 13:52:37,776 p=1074 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'm2l-lsrv05', 'address': '172.16.2.58'})
2025-01-09 13:52:37,785 p=1074 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements CNAME] ******************************************************************************************************************************************
2025-01-09 13:52:42,302 p=1074 u=root n=ansible | ok: [M2L-WSRV01] => (item={'alias': 'glpi.m2l.lan', 'target': 'm2l-lsrv03'})
2025-01-09 13:52:46,656 p=1074 u=root n=ansible | ok: [M2L-WSRV01] => (item={'alias': 'onwcloud.m2l.lan', 'target': 'm2l-lsrv03'})
2025-01-09 13:52:46,668 p=1074 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-09 13:52:46,669 p=1074 u=root n=ansible | M2L-WSRV01                 : ok=7    changed=2    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2025-01-09 13:53:14,923 p=1087 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-09 13:53:14,960 p=1087 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-09 13:54:59,440 p=1087 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 13:54:59,443 p=1087 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-09 13:55:15,829 p=1087 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 13:55:15,832 p=1087 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-09 13:55:23,263 p=1087 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 13:55:23,266 p=1087 u=root n=ansible | TASK [install_dns : Créer une zone de recherche indirecte (ZRI)] ********************************************************************************************************************************
2025-01-09 13:55:30,429 p=1087 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 13:55:30,431 p=1087 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-09 13:55:37,132 p=1087 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 13:55:37,136 p=1087 u=root n=ansible | TASK [install_dns : Vérifier si le redirecteur existe] ******************************************************************************************************************************************
2025-01-09 13:55:42,236 p=1087 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 13:55:42,241 p=1087 u=root n=ansible | TASK [install_dns : Ajouter le redirecteur si absent] *******************************************************************************************************************************************
2025-01-09 13:55:47,551 p=1087 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 13:55:47,555 p=1087 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements A] **********************************************************************************************************************************************
2025-01-09 13:55:53,812 p=1087 u=root n=ansible | changed: [M2L-WSRV01] => (item={'name': 'm2l-lsrv03', 'address': '172.16.2.59'})
2025-01-09 13:55:59,646 p=1087 u=root n=ansible | changed: [M2L-WSRV01] => (item={'name': 'm2l-lsrv05', 'address': '172.16.2.58'})
2025-01-09 13:55:59,656 p=1087 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements CNAME] ******************************************************************************************************************************************
2025-01-09 13:56:06,047 p=1087 u=root n=ansible | changed: [M2L-WSRV01] => (item={'alias': 'glpi.m2l.lan', 'target': 'm2l-lsrv03'})
2025-01-09 13:56:14,078 p=1087 u=root n=ansible | changed: [M2L-WSRV01] => (item={'alias': 'onwcloud.m2l.lan', 'target': 'm2l-lsrv03'})
2025-01-09 13:56:14,103 p=1087 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-09 13:56:14,103 p=1087 u=root n=ansible | M2L-WSRV01                 : ok=9    changed=9    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-01-09 13:58:59,998 p=1115 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-09 13:59:00,031 p=1115 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-09 13:59:06,644 p=1115 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 13:59:06,646 p=1115 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-09 13:59:21,169 p=1115 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 13:59:21,171 p=1115 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-09 13:59:21,194 p=1115 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-09 13:59:21,198 p=1115 u=root n=ansible | TASK [install_dns : Créer une zone de recherche indirecte (ZRI)] ********************************************************************************************************************************
2025-01-09 13:59:26,918 p=1115 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 13:59:26,920 p=1115 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-09 13:59:26,941 p=1115 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-09 13:59:26,944 p=1115 u=root n=ansible | TASK [install_dns : Vérifier si le redirecteur existe] ******************************************************************************************************************************************
2025-01-09 13:59:34,720 p=1115 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 13:59:34,723 p=1115 u=root n=ansible | TASK [install_dns : Ajouter le redirecteur si absent] *******************************************************************************************************************************************
2025-01-09 13:59:41,923 p=1115 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 13:59:41,926 p=1115 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements A] **********************************************************************************************************************************************
2025-01-09 13:59:48,266 p=1115 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'm2l-lsrv03', 'address': '172.16.2.59'})
2025-01-09 13:59:54,736 p=1115 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'm2l-lsrv05', 'address': '172.16.2.58'})
2025-01-09 13:59:54,746 p=1115 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements CNAME] ******************************************************************************************************************************************
2025-01-09 14:00:02,343 p=1115 u=root n=ansible | changed: [M2L-WSRV01] => (item={'alias': 'glpi', 'target': 'm2l-lsrv03.m2l.lan'})
2025-01-09 14:00:08,435 p=1115 u=root n=ansible | changed: [M2L-WSRV01] => (item={'alias': 'onwcloud', 'target': 'm2l-lsrv03.m2l.lan'})
2025-01-09 14:00:08,450 p=1115 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-09 14:00:08,450 p=1115 u=root n=ansible | M2L-WSRV01                 : ok=7    changed=3    unreachable=0    failed=0    skipped=2    rescued=0    ignored=0   
2025-01-09 17:08:17,205 p=1209 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-09 17:08:17,237 p=1209 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-09 17:08:22,732 p=1209 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 17:08:22,735 p=1209 u=root n=ansible | TASK [install_dns : Configurer le DNS de la carte réseau Ethernet1] *****************************************************************************************************************************
2025-01-09 17:08:22,756 p=1209 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-09 17:08:22,758 p=1209 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-09 17:08:32,143 p=1209 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 17:08:32,146 p=1209 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-09 17:08:32,164 p=1209 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-09 17:08:32,167 p=1209 u=root n=ansible | TASK [install_dns : Créer une zone de recherche indirecte (ZRI)] ********************************************************************************************************************************
2025-01-09 17:08:36,463 p=1209 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 17:08:36,465 p=1209 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-09 17:08:36,483 p=1209 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-09 17:08:36,485 p=1209 u=root n=ansible | TASK [install_dns : Vérifier si le redirecteur existe] ******************************************************************************************************************************************
2025-01-09 17:08:41,590 p=1209 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:08:41,592 p=1209 u=root n=ansible | TASK [install_dns : Ajouter le redirecteur si absent] *******************************************************************************************************************************************
2025-01-09 17:08:46,543 p=1209 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:08:46,545 p=1209 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements A] **********************************************************************************************************************************************
2025-01-09 17:08:51,586 p=1209 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'm2l-lsrv03', 'address': '172.16.2.59'})
2025-01-09 17:08:56,274 p=1209 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'm2l-lsrv05', 'address': '172.16.2.58'})
2025-01-09 17:08:56,285 p=1209 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements CNAME] ******************************************************************************************************************************************
2025-01-09 17:09:01,195 p=1209 u=root n=ansible | ok: [M2L-WSRV01] => (item={'alias': 'glpi', 'target': 'm2l-lsrv03.m2l.lan'})
2025-01-09 17:09:05,884 p=1209 u=root n=ansible | ok: [M2L-WSRV01] => (item={'alias': 'onwcloud', 'target': 'm2l-lsrv03.m2l.lan'})
2025-01-09 17:09:05,902 p=1209 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-09 17:09:05,902 p=1209 u=root n=ansible | M2L-WSRV01                 : ok=7    changed=2    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
2025-01-09 17:09:25,947 p=1222 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-09 17:09:25,980 p=1222 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-09 17:10:55,996 p=1222 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:10:55,999 p=1222 u=root n=ansible | TASK [install_dns : Configurer le DNS de la carte réseau Ethernet1] *****************************************************************************************************************************
2025-01-09 17:11:09,202 p=1222 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:11:09,204 p=1222 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-09 17:11:21,116 p=1222 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:11:21,119 p=1222 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-09 17:11:29,155 p=1222 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:11:29,157 p=1222 u=root n=ansible | TASK [install_dns : Créer une zone de recherche indirecte (ZRI)] ********************************************************************************************************************************
2025-01-09 17:11:36,712 p=1222 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:11:36,715 p=1222 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-09 17:11:46,241 p=1222 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:11:46,244 p=1222 u=root n=ansible | TASK [install_dns : Vérifier si le redirecteur existe] ******************************************************************************************************************************************
2025-01-09 17:11:51,665 p=1222 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:11:51,670 p=1222 u=root n=ansible | TASK [install_dns : Ajouter le redirecteur si absent] *******************************************************************************************************************************************
2025-01-09 17:11:56,911 p=1222 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:11:56,914 p=1222 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements A] **********************************************************************************************************************************************
2025-01-09 17:12:03,463 p=1222 u=root n=ansible | changed: [M2L-WSRV01] => (item={'name': 'm2l-lsrv03', 'address': '172.16.2.59'})
2025-01-09 17:12:09,756 p=1222 u=root n=ansible | changed: [M2L-WSRV01] => (item={'name': 'm2l-lsrv05', 'address': '172.16.2.58'})
2025-01-09 17:12:09,768 p=1222 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements CNAME] ******************************************************************************************************************************************
2025-01-09 17:12:16,182 p=1222 u=root n=ansible | changed: [M2L-WSRV01] => (item={'alias': 'glpi', 'target': 'm2l-lsrv03.m2l.lan'})
2025-01-09 17:12:21,903 p=1222 u=root n=ansible | changed: [M2L-WSRV01] => (item={'alias': 'onwcloud', 'target': 'm2l-lsrv03.m2l.lan'})
2025-01-09 17:12:21,931 p=1222 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-09 17:12:21,931 p=1222 u=root n=ansible | M2L-WSRV01                 : ok=10   changed=10   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-01-09 17:17:02,615 p=1242 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-09 17:17:02,645 p=1242 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-09 17:18:19,726 p=1242 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:18:19,729 p=1242 u=root n=ansible | TASK [install_dns : Configurer le DNS de la carte réseau Ethernet1] *****************************************************************************************************************************
2025-01-09 17:18:36,789 p=1242 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:18:36,791 p=1242 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-09 17:18:49,669 p=1242 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:18:49,672 p=1242 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-09 17:18:55,351 p=1242 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:18:55,353 p=1242 u=root n=ansible | TASK [install_dns : Créer une zone de recherche indirecte (ZRI)] ********************************************************************************************************************************
2025-01-09 17:19:01,065 p=1242 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:19:01,067 p=1242 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-09 17:19:06,608 p=1242 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:19:06,611 p=1242 u=root n=ansible | TASK [install_dns : Vérifier si le redirecteur existe] ******************************************************************************************************************************************
2025-01-09 17:19:12,918 p=1242 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:19:12,922 p=1242 u=root n=ansible | TASK [install_dns : Ajouter le redirecteur si absent] *******************************************************************************************************************************************
2025-01-09 17:19:19,133 p=1242 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:19:19,136 p=1242 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements A] **********************************************************************************************************************************************
2025-01-09 17:19:25,982 p=1242 u=root n=ansible | changed: [M2L-WSRV01] => (item={'name': 'm2l-lsrv03', 'address': '172.16.2.59'})
2025-01-09 17:19:32,231 p=1242 u=root n=ansible | changed: [M2L-WSRV01] => (item={'name': 'm2l-lsrv05', 'address': '172.16.2.58'})
2025-01-09 17:19:32,240 p=1242 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements CNAME] ******************************************************************************************************************************************
2025-01-09 17:19:38,828 p=1242 u=root n=ansible | changed: [M2L-WSRV01] => (item={'alias': 'glpi', 'target': 'm2l-lsrv03.m2l.lan'})
2025-01-09 17:19:45,352 p=1242 u=root n=ansible | changed: [M2L-WSRV01] => (item={'alias': 'onwcloud', 'target': 'm2l-lsrv03.m2l.lan'})
2025-01-09 17:19:45,369 p=1242 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-09 17:19:45,369 p=1242 u=root n=ansible | M2L-WSRV01                 : ok=10   changed=10   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-01-09 17:28:59,282 p=1274 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-09 17:28:59,314 p=1274 u=root n=ansible | TASK [install_dns : Installer le rôle DNS] ******************************************************************************************************************************************************
2025-01-09 17:30:13,833 p=1274 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:30:13,835 p=1274 u=root n=ansible | TASK [install_dns : Configurer le DNS de la carte réseau Ethernet1] *****************************************************************************************************************************
2025-01-09 17:30:28,274 p=1274 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:30:28,276 p=1274 u=root n=ansible | TASK [install_dns : Créer une zone de recherche directe (ZRD)] **********************************************************************************************************************************
2025-01-09 17:30:40,584 p=1274 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:30:40,589 p=1274 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-09 17:30:46,855 p=1274 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:30:46,858 p=1274 u=root n=ansible | TASK [install_dns : Créer une zone de recherche indirecte (ZRI)] ********************************************************************************************************************************
2025-01-09 17:30:53,027 p=1274 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:30:53,031 p=1274 u=root n=ansible | TASK [install_dns : Configurer les mises à jour dynamiques sur la zone ZRD] *********************************************************************************************************************
2025-01-09 17:30:58,987 p=1274 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:30:58,990 p=1274 u=root n=ansible | TASK [install_dns : Vérifier si le redirecteur existe] ******************************************************************************************************************************************
2025-01-09 17:31:05,173 p=1274 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:31:05,177 p=1274 u=root n=ansible | TASK [install_dns : Ajouter le redirecteur si absent] *******************************************************************************************************************************************
2025-01-09 17:31:10,997 p=1274 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 17:31:11,002 p=1274 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements A] **********************************************************************************************************************************************
2025-01-09 17:31:17,940 p=1274 u=root n=ansible | changed: [M2L-WSRV01] => (item={'name': 'm2l-lsrv03', 'address': '172.16.2.59'})
2025-01-09 17:31:23,899 p=1274 u=root n=ansible | changed: [M2L-WSRV01] => (item={'name': 'm2l-lsrv05', 'address': '172.16.2.58'})
2025-01-09 17:31:23,908 p=1274 u=root n=ansible | TASK [install_dns : Ajouter des enregistrements CNAME] ******************************************************************************************************************************************
2025-01-09 17:31:30,404 p=1274 u=root n=ansible | changed: [M2L-WSRV01] => (item={'alias': 'glpi', 'target': 'm2l-lsrv03.m2l.lan'})
2025-01-09 17:31:36,450 p=1274 u=root n=ansible | changed: [M2L-WSRV01] => (item={'alias': 'onwcloud', 'target': 'm2l-lsrv03.m2l.lan'})
2025-01-09 17:31:36,467 p=1274 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-09 17:31:36,468 p=1274 u=root n=ansible | M2L-WSRV01                 : ok=10   changed=10   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-01-09 18:22:04,100 p=1305 u=root n=ansible | Starting galaxy collection install process
2025-01-09 18:22:04,489 p=1305 u=root n=ansible | Process install dependency map
2025-01-09 18:22:04,489 p=1305 u=root n=ansible | |
2025-01-09 18:22:04,595 p=1305 u=root n=ansible | /
2025-01-09 18:22:04,705 p=1305 u=root n=ansible | -
2025-01-09 18:22:04,814 p=1305 u=root n=ansible | \
2025-01-09 18:22:04,914 p=1305 u=root n=ansible | |
2025-01-09 18:22:05,030 p=1305 u=root n=ansible | /
2025-01-09 18:22:05,138 p=1305 u=root n=ansible | -
2025-01-09 18:22:05,246 p=1305 u=root n=ansible | \
2025-01-09 18:22:05,355 p=1305 u=root n=ansible | |
2025-01-09 18:22:05,458 p=1305 u=root n=ansible | /
2025-01-09 18:22:05,571 p=1305 u=root n=ansible | -
2025-01-09 18:22:05,679 p=1305 u=root n=ansible | \
2025-01-09 18:22:05,788 p=1305 u=root n=ansible | |
2025-01-09 18:22:05,889 p=1305 u=root n=ansible | /
2025-01-09 18:22:06,004 p=1305 u=root n=ansible | -
2025-01-09 18:22:06,113 p=1305 u=root n=ansible | \
2025-01-09 18:22:06,221 p=1305 u=root n=ansible | Starting collection install process
2025-01-09 18:22:06,222 p=1305 u=root n=ansible | |
2025-01-09 18:22:06,329 p=1305 u=root n=ansible | 'ansible.windows:2.6.0' is already installed, skipping.
2025-01-09 18:23:07,316 p=1315 u=root n=ansible | Starting galaxy collection install process
2025-01-09 18:23:07,502 p=1315 u=root n=ansible | Process install dependency map
2025-01-09 18:23:07,503 p=1315 u=root n=ansible | |
2025-01-09 18:23:07,613 p=1315 u=root n=ansible | /
2025-01-09 18:23:07,724 p=1315 u=root n=ansible | -
2025-01-09 18:23:07,830 p=1315 u=root n=ansible | \
2025-01-09 18:23:07,939 p=1315 u=root n=ansible | |
2025-01-09 18:23:08,049 p=1315 u=root n=ansible | /
2025-01-09 18:23:08,151 p=1315 u=root n=ansible | -
2025-01-09 18:23:08,254 p=1315 u=root n=ansible | \
2025-01-09 18:23:08,363 p=1315 u=root n=ansible | |
2025-01-09 18:23:08,473 p=1315 u=root n=ansible | /
2025-01-09 18:23:08,580 p=1315 u=root n=ansible | -
2025-01-09 18:23:08,687 p=1315 u=root n=ansible | \
2025-01-09 18:23:08,796 p=1315 u=root n=ansible | |
2025-01-09 18:23:08,900 p=1315 u=root n=ansible | /
2025-01-09 18:23:09,009 p=1315 u=root n=ansible | -
2025-01-09 18:23:09,119 p=1315 u=root n=ansible | \
2025-01-09 18:23:09,231 p=1315 u=root n=ansible | Starting collection install process
2025-01-09 18:23:09,234 p=1315 u=root n=ansible | |
2025-01-09 18:23:09,246 p=1315 u=root n=ansible | Downloading https://galaxy.ansible.com/api/v3/plugin/ansible/content/published/collections/artifacts/ansible-windows-2.6.0.tar.gz to /root/.ansible/tmp/ansible-local-1315frluyfyl/tmp_7tabkv4/ansible-windows-2.6.0-nt4m5pao
2025-01-09 18:23:09,336 p=1315 u=root n=ansible | /
2025-01-09 18:23:09,443 p=1315 u=root n=ansible | -
2025-01-09 18:23:09,545 p=1315 u=root n=ansible | \
2025-01-09 18:23:09,661 p=1315 u=root n=ansible | |
2025-01-09 18:23:09,769 p=1315 u=root n=ansible | /
2025-01-09 18:23:09,876 p=1315 u=root n=ansible | -
2025-01-09 18:23:09,983 p=1315 u=root n=ansible | \
2025-01-09 18:23:10,093 p=1315 u=root n=ansible | |
2025-01-09 18:23:10,202 p=1315 u=root n=ansible | /
2025-01-09 18:23:10,311 p=1315 u=root n=ansible | -
2025-01-09 18:23:10,421 p=1315 u=root n=ansible | \
2025-01-09 18:23:10,528 p=1315 u=root n=ansible | |
2025-01-09 18:23:10,634 p=1315 u=root n=ansible | /
2025-01-09 18:23:10,743 p=1315 u=root n=ansible | -
2025-01-09 18:23:10,851 p=1315 u=root n=ansible | \
2025-01-09 18:23:10,958 p=1315 u=root n=ansible | |
2025-01-09 18:23:11,059 p=1315 u=root n=ansible | Installing 'ansible.windows:2.6.0' to '/root/.ansible/collections/ansible_collections/ansible/windows'
2025-01-09 18:23:11,059 p=1315 u=root n=ansible | /
2025-01-09 18:23:11,160 p=1315 u=root n=ansible | -
2025-01-09 18:23:11,267 p=1315 u=root n=ansible | \
2025-01-09 18:23:11,382 p=1315 u=root n=ansible | |
2025-01-09 18:23:11,492 p=1315 u=root n=ansible | ansible.windows:2.6.0 was installed successfully
2025-01-09 18:25:18,705 p=1319 u=root n=ansible | Starting galaxy collection install process
2025-01-09 18:25:18,896 p=1319 u=root n=ansible | Process install dependency map
2025-01-09 18:25:18,897 p=1319 u=root n=ansible | |
2025-01-09 18:25:19,004 p=1319 u=root n=ansible | /
2025-01-09 18:25:19,111 p=1319 u=root n=ansible | -
2025-01-09 18:25:19,219 p=1319 u=root n=ansible | \
2025-01-09 18:25:19,329 p=1319 u=root n=ansible | |
2025-01-09 18:25:19,438 p=1319 u=root n=ansible | /
2025-01-09 18:25:19,547 p=1319 u=root n=ansible | ERROR! Failed to resolve the requested dependencies map. Could not satisfy the following requirements:
* ansible.ad:* (direct request)
Hint: Pre-releases hosted on Galaxy or Automation Hub are not installed by default unless a specific version is requested. To enable pre-releases globally, use --pre.
2025-01-09 18:25:56,172 p=1322 u=root n=ansible | Starting galaxy collection install process
2025-01-09 18:25:56,364 p=1322 u=root n=ansible | Nothing to do. All requested collections are already installed. If you want to reinstall them, consider using `--force`.
2025-01-09 18:26:10,090 p=1324 u=root n=ansible | Starting galaxy collection install process
2025-01-09 18:26:10,282 p=1324 u=root n=ansible | Process install dependency map
2025-01-09 18:26:10,283 p=1324 u=root n=ansible | |
2025-01-09 18:26:10,396 p=1324 u=root n=ansible | /
2025-01-09 18:26:10,504 p=1324 u=root n=ansible | -
2025-01-09 18:26:10,613 p=1324 u=root n=ansible | \
2025-01-09 18:26:10,724 p=1324 u=root n=ansible | |
2025-01-09 18:26:10,831 p=1324 u=root n=ansible | /
2025-01-09 18:26:10,932 p=1324 u=root n=ansible | -
2025-01-09 18:26:11,045 p=1324 u=root n=ansible | \
2025-01-09 18:26:11,155 p=1324 u=root n=ansible | |
2025-01-09 18:26:11,255 p=1324 u=root n=ansible | /
2025-01-09 18:26:11,358 p=1324 u=root n=ansible | -
2025-01-09 18:26:11,468 p=1324 u=root n=ansible | \
2025-01-09 18:26:11,575 p=1324 u=root n=ansible | |
2025-01-09 18:26:11,686 p=1324 u=root n=ansible | /
2025-01-09 18:26:11,792 p=1324 u=root n=ansible | -
2025-01-09 18:26:11,900 p=1324 u=root n=ansible | \
2025-01-09 18:26:12,000 p=1324 u=root n=ansible | |
2025-01-09 18:26:12,103 p=1324 u=root n=ansible | /
2025-01-09 18:26:12,212 p=1324 u=root n=ansible | -
2025-01-09 18:26:12,323 p=1324 u=root n=ansible | Starting collection install process
2025-01-09 18:26:12,324 p=1324 u=root n=ansible | |
2025-01-09 18:26:12,328 p=1324 u=root n=ansible | Downloading https://galaxy.ansible.com/api/v3/plugin/ansible/content/published/collections/artifacts/microsoft-ad-1.8.0.tar.gz to /root/.ansible/tmp/ansible-local-1324vuvxa4x3/tmpa96_p54s/microsoft-ad-1.8.0-t2zu2jom
2025-01-09 18:26:12,433 p=1324 u=root n=ansible | /
2025-01-09 18:26:12,541 p=1324 u=root n=ansible | -
2025-01-09 18:26:12,648 p=1324 u=root n=ansible | \
2025-01-09 18:26:12,757 p=1324 u=root n=ansible | |
2025-01-09 18:26:12,867 p=1324 u=root n=ansible | /
2025-01-09 18:26:12,974 p=1324 u=root n=ansible | -
2025-01-09 18:26:13,076 p=1324 u=root n=ansible | \
2025-01-09 18:26:13,189 p=1324 u=root n=ansible | |
2025-01-09 18:26:13,299 p=1324 u=root n=ansible | /
2025-01-09 18:26:13,409 p=1324 u=root n=ansible | -
2025-01-09 18:26:13,517 p=1324 u=root n=ansible | \
2025-01-09 18:26:13,626 p=1324 u=root n=ansible | |
2025-01-09 18:26:13,736 p=1324 u=root n=ansible | /
2025-01-09 18:26:13,845 p=1324 u=root n=ansible | -
2025-01-09 18:26:13,954 p=1324 u=root n=ansible | \
2025-01-09 18:26:14,055 p=1324 u=root n=ansible | Installing 'microsoft.ad:1.8.0' to '/root/.ansible/collections/ansible_collections/microsoft/ad'
2025-01-09 18:26:14,055 p=1324 u=root n=ansible | |
2025-01-09 18:26:14,169 p=1324 u=root n=ansible | microsoft.ad:1.8.0 was installed successfully
2025-01-09 18:38:21,843 p=1387 u=root n=ansible | ERROR! conflicting action statements: microsoft.ad.domain, dns_domain_name

The error appears to be in '/var/ansible-projects/deploy-m2l/roles/install_ad/tasks/main.yml': line 9, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Vérifier ou créer le domaine
  ^ here

2025-01-09 18:39:19,434 p=1390 u=root n=ansible | ERROR! conflicting action statements: microsoft.ad.domain, dns_domain_name

The error appears to be in '/var/ansible-projects/deploy-m2l/roles/install_ad/tasks/main.yml': line 9, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Vérifier ou créer le domaine
  ^ here

2025-01-09 18:39:48,256 p=1394 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-09 18:39:48,286 p=1394 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] **************************************************************************************************************************
2025-01-09 18:40:54,499 p=1394 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 18:40:54,513 p=1394 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] ************************************************************************************************************************************************
2025-01-09 18:40:54,536 p=1394 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"msg": "The task includes an option with an undefined variable.. 'windows_admin_user' is undefined\n\nThe error appears to be in '/var/ansible-projects/deploy-m2l/roles/install_ad/tasks/main.yml': line 9, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Vérifier ou créer le domaine\n  ^ here\n"}
2025-01-09 18:40:54,538 p=1394 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-09 18:40:54,538 p=1394 u=root n=ansible | M2L-WSRV01                 : ok=1    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-09 18:41:30,154 p=1400 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-09 18:41:30,185 p=1400 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] **************************************************************************************************************************
2025-01-09 18:41:33,058 p=1400 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 18:41:33,068 p=1400 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] ************************************************************************************************************************************************
2025-01-09 18:41:36,614 p=1400 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"changed": false, "msg": "Unsupported parameters for (microsoft.ad.domain) module: domain_admin_user, domain_admin_password, state. Supported parameters include: log_path, forest_mode, install_dns, dns_domain_name, safe_mode_password, reboot, sysvol_path, create_dns_delegation, reboot_timeout, domain_netbios_name, database_path, domain_mode"}
2025-01-09 18:41:36,616 p=1400 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-09 18:41:36,616 p=1400 u=root n=ansible | M2L-WSRV01                 : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-09 18:50:50,936 p=1410 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-09 18:50:50,967 p=1410 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] **************************************************************************************************************************
2025-01-09 18:50:53,975 p=1410 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 18:50:53,987 p=1410 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] ************************************************************************************************************************************************
2025-01-09 18:50:54,006 p=1410 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"msg": "The task includes an option with an undefined variable.. 'forest_mode_name' is undefined\n\nThe error appears to be in '/var/ansible-projects/deploy-m2l/roles/install_ad/tasks/main.yml': line 9, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Vérifier ou créer le domaine\n  ^ here\n"}
2025-01-09 18:50:54,007 p=1410 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-09 18:50:54,007 p=1410 u=root n=ansible | M2L-WSRV01                 : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-09 18:51:16,928 p=1415 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-09 18:51:16,957 p=1415 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] **************************************************************************************************************************
2025-01-09 18:51:19,338 p=1415 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 18:51:19,348 p=1415 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] ************************************************************************************************************************************************
2025-01-09 18:51:22,293 p=1415 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"changed": false, "msg": "Unsupported parameters for (microsoft.ad.domain) module: state. Supported parameters include: log_path, forest_mode, install_dns, dns_domain_name, safe_mode_password, reboot, sysvol_path, create_dns_delegation, reboot_timeout, domain_netbios_name, database_path, domain_mode"}
2025-01-09 18:51:22,294 p=1415 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-09 18:51:22,294 p=1415 u=root n=ansible | M2L-WSRV01                 : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-09 18:52:09,194 p=1422 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-09 18:52:09,227 p=1422 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] **************************************************************************************************************************
2025-01-09 18:52:11,748 p=1422 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 18:52:11,762 p=1422 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] ************************************************************************************************************************************************
2025-01-09 18:52:14,572 p=1422 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"changed": false, "msg": "Unsupported parameters for (microsoft.ad.domain) module: state. Supported parameters include: log_path, forest_mode, install_dns, dns_domain_name, safe_mode_password, reboot, sysvol_path, create_dns_delegation, reboot_timeout, domain_netbios_name, database_path, domain_mode"}
2025-01-09 18:52:14,574 p=1422 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-09 18:52:14,574 p=1422 u=root n=ansible | M2L-WSRV01                 : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-09 18:52:40,951 p=1428 u=root n=ansible | PLAY [Test win_ping on windows] *****************************************************************************************************************************************************************
2025-01-09 18:52:40,983 p=1428 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] **************************************************************************************************************************
2025-01-09 18:52:43,401 p=1428 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 18:52:43,413 p=1428 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] ************************************************************************************************************************************************
2025-01-09 18:54:21,534 p=1428 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"changed": true, "msg": "The parameter 'domain_mode' does not accept 'Win2016', please use one of: Win2008, Win2008R2, Win2012, Win2012R2, WinThreshold, Default", "reboot_required": false}
2025-01-09 18:54:21,536 p=1428 u=root n=ansible | PLAY RECAP **************************************************************************************************************************************************************************************
2025-01-09 18:54:21,536 p=1428 u=root n=ansible | M2L-WSRV01                 : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-09 18:57:14,319 p=1435 u=root n=ansible | PLAY [Test win_ping on windows] *************************************************************************************************************************************************************************
2025-01-09 18:57:14,350 p=1435 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] **********************************************************************************************************************************
2025-01-09 18:57:19,033 p=1435 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 18:57:19,046 p=1435 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] ********************************************************************************************************************************************************
2025-01-09 18:58:20,619 p=1435 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"changed": false, "msg": "Failed to install ADDSForest, DCPromo exited with 54: L’opération a échoué à cause de l’erreur suivante :\r\n\r\nMédia protégé en écriture.\r\n", "reboot_required": false}
2025-01-09 18:58:20,620 p=1435 u=root n=ansible | PLAY RECAP **********************************************************************************************************************************************************************************************
2025-01-09 18:58:20,620 p=1435 u=root n=ansible | M2L-WSRV01                 : ok=1    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-09 19:02:03,257 p=1441 u=root n=ansible | PLAY [Test win_ping on windows] *************************************************************************************************************************************************************************
2025-01-09 19:02:03,287 p=1441 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] **********************************************************************************************************************************
2025-01-09 19:02:06,432 p=1441 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 19:02:06,445 p=1441 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] ********************************************************************************************************************************************************
2025-01-09 19:06:31,270 p=1441 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 19:06:31,275 p=1441 u=root n=ansible | PLAY RECAP **********************************************************************************************************************************************************************************************
2025-01-09 19:06:31,276 p=1441 u=root n=ansible | M2L-WSRV01                 : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-01-09 22:20:05,313 p=1576 u=root n=ansible | ERROR! couldn't resolve module/action 'ansible.windows.win_ad_organizational_unit'. This often indicates a misspelling, missing collection, or incorrect module path.

The error appears to be in '/var/ansible-projects/deploy-m2l/roles/install_ad/tasks/main.yml': line 23, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Create Organizational Units
  ^ here

2025-01-09 22:24:45,323 p=1582 u=root n=ansible | PLAY [Test win_ping on windows] *************************************************************************************************************************************************************************
2025-01-09 22:24:45,354 p=1582 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] **********************************************************************************************************************************
2025-01-09 22:24:49,485 p=1582 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 22:24:49,499 p=1582 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] ********************************************************************************************************************************************************
2025-01-09 22:24:53,754 p=1582 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 22:24:53,757 p=1582 u=root n=ansible | TASK [install_ad : Create Organizational Units] *********************************************************************************************************************************************************
2025-01-09 22:24:56,700 p=1582 u=root n=ansible | failed: [M2L-WSRV01] (item={'name': '0m2l.lan', 'parent': ''}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "0m2l.lan", "parent": ""}, "msg": "Unsupported parameters for (microsoft.ad.ou) module: parent_ou. Supported parameters include: street, country, description, name, domain_password, display_name, protect_from_deletion, domain_credentials, state_province, domain_username, identity, attributes, state, domain_server, city, path, managed_by, postal_code"}
2025-01-09 22:24:59,428 p=1582 u=root n=ansible | failed: [M2L-WSRV01] (item={'name': 'Ligues', 'parent': 'OU=0m2l.lan,DC=m2l,DC=lan'}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "Ligues", "parent": "OU=0m2l.lan,DC=m2l,DC=lan"}, "msg": "Unsupported parameters for (microsoft.ad.ou) module: parent_ou. Supported parameters include: street, country, description, name, domain_password, display_name, protect_from_deletion, domain_credentials, state_province, domain_username, identity, attributes, state, domain_server, city, path, managed_by, postal_code"}
2025-01-09 22:25:02,147 p=1582 u=root n=ansible | failed: [M2L-WSRV01] (item={'name': 'tennis', 'parent': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "tennis", "parent": "OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan"}, "msg": "Unsupported parameters for (microsoft.ad.ou) module: parent_ou. Supported parameters include: street, country, description, name, domain_password, display_name, protect_from_deletion, domain_credentials, state_province, domain_username, identity, attributes, state, domain_server, city, path, managed_by, postal_code"}
2025-01-09 22:25:04,918 p=1582 u=root n=ansible | failed: [M2L-WSRV01] (item={'name': 'basket', 'parent': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'}) => {"ansible_loop_var": "item", "changed": false, "item": {"name": "basket", "parent": "OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan"}, "msg": "Unsupported parameters for (microsoft.ad.ou) module: parent_ou. Supported parameters include: street, country, description, name, domain_password, display_name, protect_from_deletion, domain_credentials, state_province, domain_username, identity, attributes, state, domain_server, city, path, managed_by, postal_code"}
2025-01-09 22:25:04,941 p=1582 u=root n=ansible | PLAY RECAP **********************************************************************************************************************************************************************************************
2025-01-09 22:25:04,941 p=1582 u=root n=ansible | M2L-WSRV01                 : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-09 22:26:49,484 p=1590 u=root n=ansible | PLAY [Test win_ping on windows] *************************************************************************************************************************************************************************
2025-01-09 22:26:49,515 p=1590 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] **********************************************************************************************************************************
2025-01-09 22:26:52,560 p=1590 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 22:26:52,570 p=1590 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] ********************************************************************************************************************************************************
2025-01-09 22:26:56,296 p=1590 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 22:26:56,300 p=1590 u=root n=ansible | TASK [install_ad : Create Organizational Units] *********************************************************************************************************************************************************
2025-01-09 22:27:01,102 p=1590 u=root n=ansible | changed: [M2L-WSRV01] => (item={'name': '0m2l.lan', 'path': ''})
2025-01-09 22:27:04,678 p=1590 u=root n=ansible | changed: [M2L-WSRV01] => (item={'name': 'Ligues', 'path': 'OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 22:27:08,114 p=1590 u=root n=ansible | changed: [M2L-WSRV01] => (item={'name': 'tennis', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 22:27:11,470 p=1590 u=root n=ansible | changed: [M2L-WSRV01] => (item={'name': 'basket', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 22:27:11,495 p=1590 u=root n=ansible | PLAY RECAP **********************************************************************************************************************************************************************************************
2025-01-09 22:27:11,495 p=1590 u=root n=ansible | M2L-WSRV01                 : ok=3    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-01-09 22:43:33,936 p=1602 u=root n=ansible | PLAY [Test win_ping on windows] *************************************************************************************************************************************************************************
2025-01-09 22:43:33,969 p=1602 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] **********************************************************************************************************************************
2025-01-09 22:43:37,222 p=1602 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 22:43:37,233 p=1602 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] ********************************************************************************************************************************************************
2025-01-09 22:43:40,941 p=1602 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 22:43:40,945 p=1602 u=root n=ansible | TASK [install_ad : Create Organizational Units] *********************************************************************************************************************************************************
2025-01-09 22:43:44,658 p=1602 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': '0m2l.lan', 'path': ''})
2025-01-09 22:43:48,050 p=1602 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'Ligues', 'path': 'OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 22:43:51,415 p=1602 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'tennis', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 22:43:54,777 p=1602 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'basket', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 22:43:54,798 p=1602 u=root n=ansible | TASK [install_ad : Créer un utilisateur AD] *************************************************************************************************************************************************************
2025-01-09 22:43:59,000 p=1602 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdoe)
2025-01-09 22:44:02,732 p=1602 u=root n=ansible | changed: [M2L-WSRV01] => (item=asmith)
2025-01-09 22:44:06,736 p=1602 u=root n=ansible | changed: [M2L-WSRV01] => (item=bjones)
2025-01-09 22:44:10,461 p=1602 u=root n=ansible | changed: [M2L-WSRV01] => (item=cwhite)
2025-01-09 22:44:14,150 p=1602 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdavis)
2025-01-09 22:44:17,926 p=1602 u=root n=ansible | changed: [M2L-WSRV01] => (item=kwilson)
2025-01-09 22:44:17,950 p=1602 u=root n=ansible | PLAY RECAP **********************************************************************************************************************************************************************************************
2025-01-09 22:44:17,951 p=1602 u=root n=ansible | M2L-WSRV01                 : ok=4    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-01-09 22:44:22,254 p=1609 u=root n=ansible | PLAY [Test win_ping on windows] *************************************************************************************************************************************************************************
2025-01-09 22:44:22,288 p=1609 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] **********************************************************************************************************************************
2025-01-09 22:44:24,817 p=1609 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 22:44:24,830 p=1609 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] ********************************************************************************************************************************************************
2025-01-09 22:44:28,428 p=1609 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 22:44:28,432 p=1609 u=root n=ansible | TASK [install_ad : Create Organizational Units] *********************************************************************************************************************************************************
2025-01-09 22:44:31,955 p=1609 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': '0m2l.lan', 'path': ''})
2025-01-09 22:44:35,449 p=1609 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'Ligues', 'path': 'OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 22:44:38,931 p=1609 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'tennis', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 22:44:42,270 p=1609 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'basket', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 22:44:42,292 p=1609 u=root n=ansible | TASK [install_ad : Créer un utilisateur AD] *************************************************************************************************************************************************************
2025-01-09 22:44:46,348 p=1609 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdoe)
2025-01-09 22:44:50,067 p=1609 u=root n=ansible | changed: [M2L-WSRV01] => (item=asmith)
2025-01-09 22:44:53,839 p=1609 u=root n=ansible | changed: [M2L-WSRV01] => (item=bjones)
2025-01-09 22:44:57,770 p=1609 u=root n=ansible | changed: [M2L-WSRV01] => (item=cwhite)
2025-01-09 22:45:01,600 p=1609 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdavis)
2025-01-09 22:45:05,435 p=1609 u=root n=ansible | changed: [M2L-WSRV01] => (item=kwilson)
2025-01-09 22:45:05,459 p=1609 u=root n=ansible | PLAY RECAP **********************************************************************************************************************************************************************************************
2025-01-09 22:45:05,459 p=1609 u=root n=ansible | M2L-WSRV01                 : ok=4    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-01-09 22:48:54,816 p=1617 u=root n=ansible | PLAY [Test win_ping on windows] *************************************************************************************************************************************************************************
2025-01-09 22:48:54,850 p=1617 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] **********************************************************************************************************************************
2025-01-09 22:48:58,105 p=1617 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 22:48:58,116 p=1617 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] ********************************************************************************************************************************************************
2025-01-09 22:49:01,915 p=1617 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 22:49:01,917 p=1617 u=root n=ansible | TASK [install_ad : Create Organizational Units] *********************************************************************************************************************************************************
2025-01-09 22:49:05,551 p=1617 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': '0m2l.lan', 'path': ''})
2025-01-09 22:49:08,859 p=1617 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'Ligues', 'path': 'OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 22:49:12,382 p=1617 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'tennis', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 22:49:15,681 p=1617 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'basket', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 22:49:15,702 p=1617 u=root n=ansible | TASK [install_ad : Créer un utilisateur AD] *************************************************************************************************************************************************************
2025-01-09 22:49:19,838 p=1617 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdoe)
2025-01-09 22:49:23,634 p=1617 u=root n=ansible | changed: [M2L-WSRV01] => (item=asmith)
2025-01-09 22:49:27,456 p=1617 u=root n=ansible | changed: [M2L-WSRV01] => (item=bjones)
2025-01-09 22:49:31,283 p=1617 u=root n=ansible | changed: [M2L-WSRV01] => (item=cwhite)
2025-01-09 22:49:35,073 p=1617 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdavis)
2025-01-09 22:49:38,917 p=1617 u=root n=ansible | changed: [M2L-WSRV01] => (item=kwilson)
2025-01-09 22:49:38,942 p=1617 u=root n=ansible | PLAY RECAP **********************************************************************************************************************************************************************************************
2025-01-09 22:49:38,942 p=1617 u=root n=ansible | M2L-WSRV01                 : ok=4    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-01-09 22:50:10,289 p=1625 u=root n=ansible | PLAY [Test win_ping on windows] *************************************************************************************************************************************************************************
2025-01-09 22:50:10,321 p=1625 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] **********************************************************************************************************************************
2025-01-09 22:50:12,874 p=1625 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 22:50:12,890 p=1625 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] ********************************************************************************************************************************************************
2025-01-09 22:50:16,542 p=1625 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 22:50:16,545 p=1625 u=root n=ansible | TASK [install_ad : Modifier l'antériorité maximale du mot de passe dans la GPO par défaut] **************************************************************************************************************
2025-01-09 22:50:20,979 p=1625 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"changed": true, "cmd": "Import-Module GroupPolicy\nSet-ADDefaultDomainPasswordPolicy -Identity \"labo.lan\" -MaxPasswordAge (New-TimeSpan -Days 0)", "delta": "0:00:01.887628", "end": "2025-01-09 21:50:18.803616", "msg": "non-zero return code", "rc": 1, "start": "2025-01-09 21:50:16.915988", "stderr": "Set-ADDefaultDomainPasswordPolicy : Impossible de trouver un objet avec l’identité «labo.lan» sous: «DC=m2l,DC=lan».\r\nAu caractère Ligne:2 : 1\r\n+ Set-ADDefaultDomainPasswordPolicy -Identity \"labo.lan\" -MaxPasswordAg ...\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n    + CategoryInfo          : ObjectNotFound: (labo.lan:ADDefaultDomainPasswordPolicy) [Set-ADDefaultDomainPasswordPol \r\n   icy], ADIdentityNotFoundException\r\n    + FullyQualifiedErrorId : ActiveDirectoryCmdlet:Microsoft.ActiveDirectory.Management.ADIdentityNotFoundException,M \r\n   icrosoft.ActiveDirectory.Management.Commands.SetADDefaultDomainPasswordPolicy", "stderr_lines": ["Set-ADDefaultDomainPasswordPolicy : Impossible de trouver un objet avec l’identité «labo.lan» sous: «DC=m2l,DC=lan».", "Au caractère Ligne:2 : 1", "+ Set-ADDefaultDomainPasswordPolicy -Identity \"labo.lan\" -MaxPasswordAg ...", "+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~", "    + CategoryInfo          : ObjectNotFound: (labo.lan:ADDefaultDomainPasswordPolicy) [Set-ADDefaultDomainPasswordPol ", "   icy], ADIdentityNotFoundException", "    + FullyQualifiedErrorId : ActiveDirectoryCmdlet:Microsoft.ActiveDirectory.Management.ADIdentityNotFoundException,M ", "   icrosoft.ActiveDirectory.Management.Commands.SetADDefaultDomainPasswordPolicy"], "stdout": "", "stdout_lines": []}
2025-01-09 22:50:20,981 p=1625 u=root n=ansible | PLAY RECAP **********************************************************************************************************************************************************************************************
2025-01-09 22:50:20,982 p=1625 u=root n=ansible | M2L-WSRV01                 : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-09 22:50:51,920 p=1632 u=root n=ansible | PLAY [Test win_ping on windows] *************************************************************************************************************************************************************************
2025-01-09 22:50:51,954 p=1632 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] **********************************************************************************************************************************
2025-01-09 22:50:54,740 p=1632 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 22:50:54,753 p=1632 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] ********************************************************************************************************************************************************
2025-01-09 22:50:58,450 p=1632 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 22:50:58,452 p=1632 u=root n=ansible | TASK [install_ad : Modifier l'antériorité maximale du mot de passe dans la GPO par défaut] **************************************************************************************************************
2025-01-09 22:51:02,002 p=1632 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 22:51:02,005 p=1632 u=root n=ansible | TASK [install_ad : Create Organizational Units] *********************************************************************************************************************************************************
2025-01-09 22:51:05,585 p=1632 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': '0m2l.lan', 'path': ''})
2025-01-09 22:51:08,835 p=1632 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'Ligues', 'path': 'OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 22:51:12,326 p=1632 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'tennis', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 22:51:15,834 p=1632 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'basket', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 22:51:15,856 p=1632 u=root n=ansible | TASK [install_ad : Créer un utilisateur AD] *************************************************************************************************************************************************************
2025-01-09 22:51:20,043 p=1632 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdoe)
2025-01-09 22:51:23,979 p=1632 u=root n=ansible | changed: [M2L-WSRV01] => (item=asmith)
2025-01-09 22:51:28,028 p=1632 u=root n=ansible | changed: [M2L-WSRV01] => (item=bjones)
2025-01-09 22:51:31,900 p=1632 u=root n=ansible | changed: [M2L-WSRV01] => (item=cwhite)
2025-01-09 22:51:35,763 p=1632 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdavis)
2025-01-09 22:51:39,675 p=1632 u=root n=ansible | changed: [M2L-WSRV01] => (item=kwilson)
2025-01-09 22:51:39,698 p=1632 u=root n=ansible | PLAY RECAP **********************************************************************************************************************************************************************************************
2025-01-09 22:51:39,698 p=1632 u=root n=ansible | M2L-WSRV01                 : ok=5    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-01-09 22:56:25,706 p=1644 u=root n=ansible | PLAY [Test win_ping on windows] *************************************************************************************************************************************************************************
2025-01-09 22:56:25,739 p=1644 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] **********************************************************************************************************************************
2025-01-09 22:56:28,773 p=1644 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 22:56:28,786 p=1644 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] ********************************************************************************************************************************************************
2025-01-09 22:56:32,648 p=1644 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 22:56:32,651 p=1644 u=root n=ansible | TASK [install_ad : Vérifier si l'antériorité maximale du mot de passe est déjà configurée] **************************************************************************************************************
2025-01-09 22:56:36,363 p=1644 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 22:56:36,365 p=1644 u=root n=ansible | TASK [install_ad : Modifier l'antériorité maximale du mot de passe dans la GPO par défaut] **************************************************************************************************************
2025-01-09 22:56:39,892 p=1644 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 22:56:39,895 p=1644 u=root n=ansible | TASK [install_ad : Create Organizational Units] *********************************************************************************************************************************************************
2025-01-09 22:56:43,415 p=1644 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': '0m2l.lan', 'path': ''})
2025-01-09 22:56:46,819 p=1644 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'Ligues', 'path': 'OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 22:56:50,170 p=1644 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'tennis', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 22:56:53,498 p=1644 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'basket', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 22:56:53,520 p=1644 u=root n=ansible | TASK [install_ad : Créer un utilisateur AD] *************************************************************************************************************************************************************
2025-01-09 22:56:57,515 p=1644 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdoe)
2025-01-09 22:57:01,297 p=1644 u=root n=ansible | changed: [M2L-WSRV01] => (item=asmith)
2025-01-09 22:57:05,102 p=1644 u=root n=ansible | changed: [M2L-WSRV01] => (item=bjones)
2025-01-09 22:57:08,924 p=1644 u=root n=ansible | changed: [M2L-WSRV01] => (item=cwhite)
2025-01-09 22:57:12,899 p=1644 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdavis)
2025-01-09 22:57:16,730 p=1644 u=root n=ansible | changed: [M2L-WSRV01] => (item=kwilson)
2025-01-09 22:57:16,755 p=1644 u=root n=ansible | PLAY RECAP **********************************************************************************************************************************************************************************************
2025-01-09 22:57:16,755 p=1644 u=root n=ansible | M2L-WSRV01                 : ok=6    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-01-09 22:58:23,956 p=1654 u=root n=ansible | PLAY [Test win_ping on windows] *************************************************************************************************************************************************************************
2025-01-09 22:58:23,988 p=1654 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] **********************************************************************************************************************************
2025-01-09 22:58:26,739 p=1654 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 22:58:26,749 p=1654 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] ********************************************************************************************************************************************************
2025-01-09 22:58:30,398 p=1654 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 22:58:30,403 p=1654 u=root n=ansible | TASK [install_ad : Vérifier si l'antériorité maximale du mot de passe est déjà configurée] **************************************************************************************************************
2025-01-09 22:58:33,778 p=1654 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 22:58:33,782 p=1654 u=root n=ansible | TASK [install_ad : Modifier l'antériorité maximale du mot de passe dans la GPO par défaut] **************************************************************************************************************
2025-01-09 22:58:37,141 p=1654 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 22:58:37,146 p=1654 u=root n=ansible | TASK [install_ad : Create Organizational Units] *********************************************************************************************************************************************************
2025-01-09 22:58:40,656 p=1654 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': '0m2l.lan', 'path': ''})
2025-01-09 22:58:43,947 p=1654 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'Ligues', 'path': 'OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 22:58:47,323 p=1654 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'tennis', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 22:58:50,633 p=1654 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'basket', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 22:58:50,654 p=1654 u=root n=ansible | TASK [install_ad : Créer un utilisateur AD] *************************************************************************************************************************************************************
2025-01-09 22:58:54,616 p=1654 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdoe)
2025-01-09 22:58:58,493 p=1654 u=root n=ansible | changed: [M2L-WSRV01] => (item=asmith)
2025-01-09 22:59:02,235 p=1654 u=root n=ansible | changed: [M2L-WSRV01] => (item=bjones)
2025-01-09 22:59:06,167 p=1654 u=root n=ansible | changed: [M2L-WSRV01] => (item=cwhite)
2025-01-09 22:59:09,949 p=1654 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdavis)
2025-01-09 22:59:13,705 p=1654 u=root n=ansible | changed: [M2L-WSRV01] => (item=kwilson)
2025-01-09 22:59:13,729 p=1654 u=root n=ansible | PLAY RECAP **********************************************************************************************************************************************************************************************
2025-01-09 22:59:13,729 p=1654 u=root n=ansible | M2L-WSRV01                 : ok=6    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-01-09 23:08:20,318 p=1670 u=root n=ansible | PLAY [Test win_ping on windows] **********************************************************************************************************************************************************************************************
2025-01-09 23:08:20,353 p=1670 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] *******************************************************************************************************************************************************
2025-01-09 23:08:23,531 p=1670 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:08:23,546 p=1670 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] *****************************************************************************************************************************************************************************
2025-01-09 23:08:27,359 p=1670 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:08:27,361 p=1670 u=root n=ansible | TASK [install_ad : Vérifier si l'antériorité maximale du mot de passe est déjà configurée] ***********************************************************************************************************************************
2025-01-09 23:08:30,866 p=1670 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 23:08:30,868 p=1670 u=root n=ansible | TASK [install_ad : Modifier l'antériorité maximale du mot de passe dans la GPO par défaut] ***********************************************************************************************************************************
2025-01-09 23:08:34,377 p=1670 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:08:34,380 p=1670 u=root n=ansible | TASK [install_ad : Create Organizational Units] ******************************************************************************************************************************************************************************
2025-01-09 23:08:37,922 p=1670 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': '0m2l.lan', 'path': ''})
2025-01-09 23:08:41,212 p=1670 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'Ligues', 'path': 'OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:08:44,855 p=1670 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'tennis', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:08:48,154 p=1670 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'basket', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:08:48,176 p=1670 u=root n=ansible | TASK [install_ad : Vérifier si l'utilisateur existe] *************************************************************************************************************************************************************************
2025-01-09 23:08:48,205 p=1670 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"msg": "'dict object' has no attribute 'users'"}
2025-01-09 23:08:48,207 p=1670 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************************************************************************************
2025-01-09 23:08:48,208 p=1670 u=root n=ansible | M2L-WSRV01                 : ok=5    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-09 23:16:09,172 p=1688 u=root n=ansible | PLAY [Test win_ping on windows] **********************************************************************************************************************************************************************************************
2025-01-09 23:16:09,211 p=1688 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] *******************************************************************************************************************************************************
2025-01-09 23:16:12,391 p=1688 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:16:12,406 p=1688 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] *****************************************************************************************************************************************************************************
2025-01-09 23:16:16,222 p=1688 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:16:16,225 p=1688 u=root n=ansible | TASK [install_ad : Vérifier si l'antériorité maximale du mot de passe est déjà configurée] ***********************************************************************************************************************************
2025-01-09 23:16:19,939 p=1688 u=root n=ansible | changed: [M2L-WSRV01]
2025-01-09 23:16:19,942 p=1688 u=root n=ansible | TASK [install_ad : Modifier l'antériorité maximale du mot de passe dans la GPO par défaut] ***********************************************************************************************************************************
2025-01-09 23:16:23,288 p=1688 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:16:23,290 p=1688 u=root n=ansible | TASK [install_ad : Create Organizational Units] ******************************************************************************************************************************************************************************
2025-01-09 23:16:26,829 p=1688 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': '0m2l.lan', 'path': ''})
2025-01-09 23:16:30,143 p=1688 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'Ligues', 'path': 'OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:16:33,396 p=1688 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'tennis', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:16:36,654 p=1688 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'basket', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:16:36,676 p=1688 u=root n=ansible | TASK [install_ad : Vérifier si l'utilisateur existe] *************************************************************************************************************************************************************************
2025-01-09 23:16:39,926 p=1688 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdoe)
2025-01-09 23:16:43,023 p=1688 u=root n=ansible | changed: [M2L-WSRV01] => (item=asmith)
2025-01-09 23:16:46,220 p=1688 u=root n=ansible | changed: [M2L-WSRV01] => (item=bjones)
2025-01-09 23:16:49,288 p=1688 u=root n=ansible | changed: [M2L-WSRV01] => (item=cwhite)
2025-01-09 23:16:52,364 p=1688 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdavis)
2025-01-09 23:16:55,464 p=1688 u=root n=ansible | changed: [M2L-WSRV01] => (item=kwilson)
2025-01-09 23:16:55,485 p=1688 u=root n=ansible | TASK [install_ad : Créer l'utilisateur si absent] ****************************************************************************************************************************************************************************
2025-01-09 23:16:55,511 p=1688 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"msg": "The conditional check 'user_check.results[itemloop.index0].stdout == \"missing\"' failed. The error was: error while evaluating conditional (user_check.results[itemloop.index0].stdout == \"missing\"): list object has no element AnsibleUndefined(hint=None, obj=missing, name='itemloop')\n\nThe error appears to be in '/var/ansible-projects/deploy-m2l/roles/install_ad/tasks/main.yml': line 61, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Créer l'utilisateur si absent\n  ^ here\n"}
2025-01-09 23:16:55,513 p=1688 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************************************************************************************
2025-01-09 23:16:55,513 p=1688 u=root n=ansible | M2L-WSRV01                 : ok=6    changed=2    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-09 23:19:28,152 p=1704 u=root n=ansible | PLAY [Test win_ping on windows] **********************************************************************************************************************************************************************************************
2025-01-09 23:19:28,186 p=1704 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] *******************************************************************************************************************************************************
2025-01-09 23:19:30,910 p=1704 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:19:30,921 p=1704 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] *****************************************************************************************************************************************************************************
2025-01-09 23:19:34,586 p=1704 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:19:34,588 p=1704 u=root n=ansible | TASK [install_ad : Vérifier si l'antériorité maximale du mot de passe est déjà configurée] ***********************************************************************************************************************************
2025-01-09 23:19:38,068 p=1704 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:19:38,071 p=1704 u=root n=ansible | TASK [install_ad : Modifier l'antériorité maximale du mot de passe dans la GPO par défaut] ***********************************************************************************************************************************
2025-01-09 23:19:41,693 p=1704 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:19:41,695 p=1704 u=root n=ansible | TASK [install_ad : Create Organizational Units] ******************************************************************************************************************************************************************************
2025-01-09 23:19:45,244 p=1704 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': '0m2l.lan', 'path': ''})
2025-01-09 23:19:48,571 p=1704 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'Ligues', 'path': 'OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:19:51,826 p=1704 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'tennis', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:19:55,144 p=1704 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'basket', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:19:55,167 p=1704 u=root n=ansible | TASK [install_ad : Vérifier si l'utilisateur existe] *************************************************************************************************************************************************************************
2025-01-09 23:19:58,379 p=1704 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdoe)
2025-01-09 23:20:01,426 p=1704 u=root n=ansible | changed: [M2L-WSRV01] => (item=asmith)
2025-01-09 23:20:04,454 p=1704 u=root n=ansible | changed: [M2L-WSRV01] => (item=bjones)
2025-01-09 23:20:07,534 p=1704 u=root n=ansible | changed: [M2L-WSRV01] => (item=cwhite)
2025-01-09 23:20:10,516 p=1704 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdavis)
2025-01-09 23:20:13,510 p=1704 u=root n=ansible | changed: [M2L-WSRV01] => (item=kwilson)
2025-01-09 23:20:13,535 p=1704 u=root n=ansible | TASK [install_ad : Créer l'utilisateur si absent] ****************************************************************************************************************************************************************************
2025-01-09 23:20:13,573 p=1704 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"msg": "The conditional check 'user_check.results[itemloop.index].stdout == \"missing\"' failed. The error was: error while evaluating conditional (user_check.results[itemloop.index].stdout == \"missing\"): list object has no element AnsibleUndefined(hint=None, obj=missing, name='itemloop')\n\nThe error appears to be in '/var/ansible-projects/deploy-m2l/roles/install_ad/tasks/main.yml': line 61, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Créer l'utilisateur si absent\n  ^ here\n"}
2025-01-09 23:20:13,575 p=1704 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************************************************************************************
2025-01-09 23:20:13,575 p=1704 u=root n=ansible | M2L-WSRV01                 : ok=6    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-09 23:22:48,829 p=1720 u=root n=ansible | PLAY [Test win_ping on windows] **********************************************************************************************************************************************************************************************
2025-01-09 23:22:48,841 p=1720 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] *******************************************************************************************************************************************************
2025-01-09 23:22:51,819 p=1720 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:22:51,830 p=1720 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] *****************************************************************************************************************************************************************************
2025-01-09 23:22:55,617 p=1720 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:22:55,621 p=1720 u=root n=ansible | TASK [install_ad : Vérifier si l'antériorité maximale du mot de passe est déjà configurée] ***********************************************************************************************************************************
2025-01-09 23:22:59,421 p=1720 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:22:59,423 p=1720 u=root n=ansible | TASK [install_ad : Modifier l'antériorité maximale du mot de passe dans la GPO par défaut] ***********************************************************************************************************************************
2025-01-09 23:23:02,698 p=1720 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:23:02,701 p=1720 u=root n=ansible | TASK [install_ad : Create Organizational Units] ******************************************************************************************************************************************************************************
2025-01-09 23:23:06,227 p=1720 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': '0m2l.lan', 'path': ''})
2025-01-09 23:23:09,563 p=1720 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'Ligues', 'path': 'OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:23:12,822 p=1720 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'tennis', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:23:16,089 p=1720 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'basket', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:23:16,110 p=1720 u=root n=ansible | TASK [install_ad : Vérifier si l'utilisateur existe] *************************************************************************************************************************************************************************
2025-01-09 23:23:19,372 p=1720 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdoe)
2025-01-09 23:23:22,460 p=1720 u=root n=ansible | changed: [M2L-WSRV01] => (item=asmith)
2025-01-09 23:23:25,608 p=1720 u=root n=ansible | changed: [M2L-WSRV01] => (item=bjones)
2025-01-09 23:23:28,714 p=1720 u=root n=ansible | changed: [M2L-WSRV01] => (item=cwhite)
2025-01-09 23:23:31,755 p=1720 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdavis)
2025-01-09 23:23:34,843 p=1720 u=root n=ansible | changed: [M2L-WSRV01] => (item=kwilson)
2025-01-09 23:23:34,868 p=1720 u=root n=ansible | TASK [install_ad : Debug user_check results] *********************************************************************************************************************************************************************************
2025-01-09 23:23:34,897 p=1720 u=root n=ansible | ok: [M2L-WSRV01] => {
    "user_check.results": [
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"jdoe\"} -SearchBase \"OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.829739",
            "end": "2025-01-09 22:23:17.273846",
            "failed": false,
            "item": {
                "description": "Utilisateur Tennis 1",
                "display_name": "John Doe",
                "email": "jdoe@m2l.lan",
                "firstname": "John",
                "lastname": "Doe",
                "name": "jdoe",
                "password": "Btssio75000",
                "path": "OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:23:16.444106",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"asmith\"} -SearchBase \"OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.844351",
            "end": "2025-01-09 22:23:20.350936",
            "failed": false,
            "item": {
                "description": "Utilisateur Tennis 2",
                "display_name": "Anna Smith",
                "email": "asmith@m2l.lan",
                "firstname": "Anna",
                "lastname": "Smith",
                "name": "asmith",
                "password": "Btssio75000",
                "path": "OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:23:19.506584",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"bjones\"} -SearchBase \"OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.873286",
            "end": "2025-01-09 22:23:23.507081",
            "failed": false,
            "item": {
                "description": "Utilisateur Tennis 3",
                "display_name": "Bob Jones",
                "email": "bjones@m2l.lan",
                "firstname": "Bob",
                "lastname": "Jones",
                "name": "bjones",
                "password": "Btssio75000",
                "path": "OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:23:22.633794",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"cwhite\"} -SearchBase \"OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.875025",
            "end": "2025-01-09 22:23:26.616369",
            "failed": false,
            "item": {
                "description": "Utilisateur Basket 1",
                "display_name": "Chris White",
                "email": "cwhite@m2l.lan",
                "firstname": "Chris",
                "lastname": "White",
                "name": "cwhite",
                "password": "Btssio75000",
                "path": "OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:23:25.741344",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"jdavis\"} -SearchBase \"OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.827645",
            "end": "2025-01-09 22:23:29.662896",
            "failed": false,
            "item": {
                "description": "Utilisateur Basket 2",
                "display_name": "Jane Davis",
                "email": "jdavis@m2l.lan",
                "firstname": "Jane",
                "lastname": "Davis",
                "name": "jdavis",
                "password": "Btssio75000",
                "path": "OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:23:28.835250",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"kwilson\"} -SearchBase \"OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.842224",
            "end": "2025-01-09 22:23:32.740998",
            "failed": false,
            "item": {
                "description": "Utilisateur Basket 3",
                "display_name": "Kevin Wilson",
                "email": "kwilson@m2l.lan",
                "firstname": "Kevin",
                "lastname": "Wilson",
                "name": "kwilson",
                "password": "Btssio75000",
                "path": "OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:23:31.898774",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        }
    ]
}
2025-01-09 23:23:34,900 p=1720 u=root n=ansible | TASK [install_ad : Créer l'utilisateur si absent] ****************************************************************************************************************************************************************************
2025-01-09 23:23:34,932 p=1720 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"msg": "The conditional check 'user_check.results[loop.index0].stdout == \"missing\"' failed. The error was: error while evaluating conditional (user_check.results[loop.index0].stdout == \"missing\"): list object has no element AnsibleUndefined(hint=None, obj=missing, name='loop')\n\nThe error appears to be in '/var/ansible-projects/deploy-m2l/roles/install_ad/tasks/main.yml': line 66, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Créer l'utilisateur si absent\n  ^ here\n"}
2025-01-09 23:23:34,933 p=1720 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************************************************************************************
2025-01-09 23:23:34,933 p=1720 u=root n=ansible | M2L-WSRV01                 : ok=7    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-09 23:26:37,483 p=1733 u=root n=ansible | PLAY [Test win_ping on windows] **********************************************************************************************************************************************************************************************
2025-01-09 23:26:37,495 p=1733 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] *******************************************************************************************************************************************************
2025-01-09 23:26:40,816 p=1733 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:26:40,826 p=1733 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] *****************************************************************************************************************************************************************************
2025-01-09 23:26:44,796 p=1733 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:26:44,799 p=1733 u=root n=ansible | TASK [install_ad : Vérifier si l'antériorité maximale du mot de passe est déjà configurée] ***********************************************************************************************************************************
2025-01-09 23:26:48,260 p=1733 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:26:48,262 p=1733 u=root n=ansible | TASK [install_ad : Modifier l'antériorité maximale du mot de passe dans la GPO par défaut] ***********************************************************************************************************************************
2025-01-09 23:26:51,589 p=1733 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:26:51,591 p=1733 u=root n=ansible | TASK [install_ad : Create Organizational Units] ******************************************************************************************************************************************************************************
2025-01-09 23:26:55,182 p=1733 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': '0m2l.lan', 'path': ''})
2025-01-09 23:26:58,567 p=1733 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'Ligues', 'path': 'OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:27:01,946 p=1733 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'tennis', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:27:05,340 p=1733 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'basket', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:27:05,362 p=1733 u=root n=ansible | TASK [install_ad : Vérifier si l'utilisateur existe] *************************************************************************************************************************************************************************
2025-01-09 23:27:08,636 p=1733 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdoe)
2025-01-09 23:27:11,859 p=1733 u=root n=ansible | changed: [M2L-WSRV01] => (item=asmith)
2025-01-09 23:27:14,952 p=1733 u=root n=ansible | changed: [M2L-WSRV01] => (item=bjones)
2025-01-09 23:27:17,986 p=1733 u=root n=ansible | changed: [M2L-WSRV01] => (item=cwhite)
2025-01-09 23:27:21,368 p=1733 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdavis)
2025-01-09 23:27:24,524 p=1733 u=root n=ansible | changed: [M2L-WSRV01] => (item=kwilson)
2025-01-09 23:27:24,548 p=1733 u=root n=ansible | TASK [install_ad : Debug user_check results] *********************************************************************************************************************************************************************************
2025-01-09 23:27:24,578 p=1733 u=root n=ansible | ok: [M2L-WSRV01] => {
    "user_check.results": [
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"jdoe\"} -SearchBase \"OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.824977",
            "end": "2025-01-09 22:27:06.537987",
            "failed": false,
            "item": {
                "description": "Utilisateur Tennis 1",
                "display_name": "John Doe",
                "email": "jdoe@m2l.lan",
                "firstname": "John",
                "lastname": "Doe",
                "name": "jdoe",
                "password": "Btssio75000",
                "path": "OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:27:05.713009",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"asmith\"} -SearchBase \"OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.828437",
            "end": "2025-01-09 22:27:09.773568",
            "failed": false,
            "item": {
                "description": "Utilisateur Tennis 2",
                "display_name": "Anna Smith",
                "email": "asmith@m2l.lan",
                "firstname": "Anna",
                "lastname": "Smith",
                "name": "asmith",
                "password": "Btssio75000",
                "path": "OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:27:08.945131",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"bjones\"} -SearchBase \"OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.827868",
            "end": "2025-01-09 22:27:12.819037",
            "failed": false,
            "item": {
                "description": "Utilisateur Tennis 3",
                "display_name": "Bob Jones",
                "email": "bjones@m2l.lan",
                "firstname": "Bob",
                "lastname": "Jones",
                "name": "bjones",
                "password": "Btssio75000",
                "path": "OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:27:11.991168",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"cwhite\"} -SearchBase \"OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.828010",
            "end": "2025-01-09 22:27:15.883276",
            "failed": false,
            "item": {
                "description": "Utilisateur Basket 1",
                "display_name": "Chris White",
                "email": "cwhite@m2l.lan",
                "firstname": "Chris",
                "lastname": "White",
                "name": "cwhite",
                "password": "Btssio75000",
                "path": "OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:27:15.055265",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"jdavis\"} -SearchBase \"OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.921664",
            "end": "2025-01-09 22:27:19.272848",
            "failed": false,
            "item": {
                "description": "Utilisateur Basket 2",
                "display_name": "Jane Davis",
                "email": "jdavis@m2l.lan",
                "firstname": "Jane",
                "lastname": "Davis",
                "name": "jdavis",
                "password": "Btssio75000",
                "path": "OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:27:18.351184",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"kwilson\"} -SearchBase \"OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.906376",
            "end": "2025-01-09 22:27:22.428717",
            "failed": false,
            "item": {
                "description": "Utilisateur Basket 3",
                "display_name": "Kevin Wilson",
                "email": "kwilson@m2l.lan",
                "firstname": "Kevin",
                "lastname": "Wilson",
                "name": "kwilson",
                "password": "Btssio75000",
                "path": "OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:27:21.522340",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        }
    ]
}
2025-01-09 23:27:24,581 p=1733 u=root n=ansible | TASK [install_ad : Créer l'utilisateur si absent] ****************************************************************************************************************************************************************************
2025-01-09 23:27:24,619 p=1733 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"msg": "The conditional check 'user_check.results[loop.index0].stdout | trim == \"missing\"' failed. The error was: error while evaluating conditional (user_check.results[loop.index0].stdout | trim == \"missing\"): list object has no element AnsibleUndefined(hint=None, obj=missing, name='loop')\n\nThe error appears to be in '/var/ansible-projects/deploy-m2l/roles/install_ad/tasks/main.yml': line 66, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Créer l'utilisateur si absent\n  ^ here\n"}
2025-01-09 23:27:24,621 p=1733 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************************************************************************************
2025-01-09 23:27:24,621 p=1733 u=root n=ansible | M2L-WSRV01                 : ok=7    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-09 23:31:03,359 p=1745 u=root n=ansible | PLAY [Test win_ping on windows] **********************************************************************************************************************************************************************************************
2025-01-09 23:31:03,370 p=1745 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] *******************************************************************************************************************************************************
2025-01-09 23:31:06,386 p=1745 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:31:06,398 p=1745 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] *****************************************************************************************************************************************************************************
2025-01-09 23:31:10,064 p=1745 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:31:10,067 p=1745 u=root n=ansible | TASK [install_ad : Vérifier si l'antériorité maximale du mot de passe est déjà configurée] ***********************************************************************************************************************************
2025-01-09 23:31:13,631 p=1745 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:31:13,634 p=1745 u=root n=ansible | TASK [install_ad : Modifier l'antériorité maximale du mot de passe dans la GPO par défaut] ***********************************************************************************************************************************
2025-01-09 23:31:16,895 p=1745 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:31:16,898 p=1745 u=root n=ansible | TASK [install_ad : Create Organizational Units] ******************************************************************************************************************************************************************************
2025-01-09 23:31:20,346 p=1745 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': '0m2l.lan', 'path': ''})
2025-01-09 23:31:23,593 p=1745 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'Ligues', 'path': 'OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:31:26,931 p=1745 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'tennis', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:31:30,247 p=1745 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'basket', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:31:30,269 p=1745 u=root n=ansible | TASK [install_ad : Vérifier si l'utilisateur existe] *************************************************************************************************************************************************************************
2025-01-09 23:31:33,455 p=1745 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdoe)
2025-01-09 23:31:36,500 p=1745 u=root n=ansible | changed: [M2L-WSRV01] => (item=asmith)
2025-01-09 23:31:39,885 p=1745 u=root n=ansible | changed: [M2L-WSRV01] => (item=bjones)
2025-01-09 23:31:43,107 p=1745 u=root n=ansible | changed: [M2L-WSRV01] => (item=cwhite)
2025-01-09 23:31:46,292 p=1745 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdavis)
2025-01-09 23:31:49,338 p=1745 u=root n=ansible | changed: [M2L-WSRV01] => (item=kwilson)
2025-01-09 23:31:49,359 p=1745 u=root n=ansible | TASK [install_ad : Debug user_check results] *********************************************************************************************************************************************************************************
2025-01-09 23:31:49,390 p=1745 u=root n=ansible | ok: [M2L-WSRV01] => {
    "user_check.results": [
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"jdoe\"} -SearchBase \"OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.841927",
            "end": "2025-01-09 22:31:31.365986",
            "failed": false,
            "item": {
                "description": "Utilisateur Tennis 1",
                "display_name": "John Doe",
                "email": "jdoe@m2l.lan",
                "firstname": "John",
                "lastname": "Doe",
                "name": "jdoe",
                "password": "Btssio75000",
                "path": "OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:31:30.524059",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"asmith\"} -SearchBase \"OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.844082",
            "end": "2025-01-09 22:31:34.413575",
            "failed": false,
            "item": {
                "description": "Utilisateur Tennis 2",
                "display_name": "Anna Smith",
                "email": "asmith@m2l.lan",
                "firstname": "Anna",
                "lastname": "Smith",
                "name": "asmith",
                "password": "Btssio75000",
                "path": "OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:31:33.569492",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"bjones\"} -SearchBase \"OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:01.000659",
            "end": "2025-01-09 22:31:37.758852",
            "failed": false,
            "item": {
                "description": "Utilisateur Tennis 3",
                "display_name": "Bob Jones",
                "email": "bjones@m2l.lan",
                "firstname": "Bob",
                "lastname": "Jones",
                "name": "bjones",
                "password": "Btssio75000",
                "path": "OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:31:36.758192",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"cwhite\"} -SearchBase \"OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.859553",
            "end": "2025-01-09 22:31:40.992321",
            "failed": false,
            "item": {
                "description": "Utilisateur Basket 1",
                "display_name": "Chris White",
                "email": "cwhite@m2l.lan",
                "firstname": "Chris",
                "lastname": "White",
                "name": "cwhite",
                "password": "Btssio75000",
                "path": "OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:31:40.132767",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"jdavis\"} -SearchBase \"OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.843124",
            "end": "2025-01-09 22:31:44.194071",
            "failed": false,
            "item": {
                "description": "Utilisateur Basket 2",
                "display_name": "Jane Davis",
                "email": "jdavis@m2l.lan",
                "firstname": "Jane",
                "lastname": "Davis",
                "name": "jdavis",
                "password": "Btssio75000",
                "path": "OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:31:43.350947",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"kwilson\"} -SearchBase \"OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.873372",
            "end": "2025-01-09 22:31:47.241567",
            "failed": false,
            "item": {
                "description": "Utilisateur Basket 3",
                "display_name": "Kevin Wilson",
                "email": "kwilson@m2l.lan",
                "firstname": "Kevin",
                "lastname": "Wilson",
                "name": "kwilson",
                "password": "Btssio75000",
                "path": "OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:31:46.368194",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        }
    ]
}
2025-01-09 23:31:49,393 p=1745 u=root n=ansible | TASK [install_ad : Créer l'utilisateur si absent] ****************************************************************************************************************************************************************************
2025-01-09 23:31:49,425 p=1745 u=root n=ansible | fatal: [M2L-WSRV01]: FAILED! => {"msg": "The conditional check 'user_check.results | selectattr('item.name', 'equalto', item.name| map(attribute='stdout') | first | trim == \"missing\"' failed. The error was: template error while templating string: unexpected '}', expected ')'. String: {% if user_check.results | selectattr('item.name', 'equalto', item.name| map(attribute='stdout') | first | trim == \"missing\" %} True {% else %} False {% endif %}. unexpected '}', expected ')'\n\nThe error appears to be in '/var/ansible-projects/deploy-m2l/roles/install_ad/tasks/main.yml': line 66, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Créer l'utilisateur si absent\n  ^ here\n"}
2025-01-09 23:31:49,426 p=1745 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************************************************************************************
2025-01-09 23:31:49,426 p=1745 u=root n=ansible | M2L-WSRV01                 : ok=7    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-09 23:34:17,219 p=1760 u=root n=ansible | PLAY [Test win_ping on windows] **********************************************************************************************************************************************************************************************
2025-01-09 23:34:17,231 p=1760 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] *******************************************************************************************************************************************************
2025-01-09 23:34:20,283 p=1760 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:34:20,295 p=1760 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] *****************************************************************************************************************************************************************************
2025-01-09 23:34:23,962 p=1760 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:34:23,965 p=1760 u=root n=ansible | TASK [install_ad : Vérifier si l'antériorité maximale du mot de passe est déjà configurée] ***********************************************************************************************************************************
2025-01-09 23:34:27,508 p=1760 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:34:27,511 p=1760 u=root n=ansible | TASK [install_ad : Modifier l'antériorité maximale du mot de passe dans la GPO par défaut] ***********************************************************************************************************************************
2025-01-09 23:34:30,793 p=1760 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:34:30,796 p=1760 u=root n=ansible | TASK [install_ad : Create Organizational Units] ******************************************************************************************************************************************************************************
2025-01-09 23:34:34,319 p=1760 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': '0m2l.lan', 'path': ''})
2025-01-09 23:34:37,727 p=1760 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'Ligues', 'path': 'OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:34:40,983 p=1760 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'tennis', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:34:44,312 p=1760 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'basket', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:34:44,332 p=1760 u=root n=ansible | TASK [install_ad : Vérifier si l'utilisateur existe] *************************************************************************************************************************************************************************
2025-01-09 23:34:47,544 p=1760 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdoe)
2025-01-09 23:34:50,574 p=1760 u=root n=ansible | changed: [M2L-WSRV01] => (item=asmith)
2025-01-09 23:34:53,544 p=1760 u=root n=ansible | changed: [M2L-WSRV01] => (item=bjones)
2025-01-09 23:34:56,644 p=1760 u=root n=ansible | changed: [M2L-WSRV01] => (item=cwhite)
2025-01-09 23:34:59,756 p=1760 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdavis)
2025-01-09 23:35:02,838 p=1760 u=root n=ansible | changed: [M2L-WSRV01] => (item=kwilson)
2025-01-09 23:35:02,860 p=1760 u=root n=ansible | TASK [install_ad : Debug user_check results] *********************************************************************************************************************************************************************************
2025-01-09 23:35:02,889 p=1760 u=root n=ansible | ok: [M2L-WSRV01] => {
    "user_check.results": [
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"jdoe\"} -SearchBase \"OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.828429",
            "end": "2025-01-09 22:34:45.460008",
            "failed": false,
            "item": {
                "description": "Utilisateur Tennis 1",
                "display_name": "John Doe",
                "email": "jdoe@m2l.lan",
                "firstname": "John",
                "lastname": "Doe",
                "name": "jdoe",
                "password": "Btssio75000",
                "path": "OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:34:44.631578",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"asmith\"} -SearchBase \"OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.812411",
            "end": "2025-01-09 22:34:48.491386",
            "failed": false,
            "item": {
                "description": "Utilisateur Tennis 2",
                "display_name": "Anna Smith",
                "email": "asmith@m2l.lan",
                "firstname": "Anna",
                "lastname": "Smith",
                "name": "asmith",
                "password": "Btssio75000",
                "path": "OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:34:47.678975",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"bjones\"} -SearchBase \"OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.812083",
            "end": "2025-01-09 22:34:51.460089",
            "failed": false,
            "item": {
                "description": "Utilisateur Tennis 3",
                "display_name": "Bob Jones",
                "email": "bjones@m2l.lan",
                "firstname": "Bob",
                "lastname": "Jones",
                "name": "bjones",
                "password": "Btssio75000",
                "path": "OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:34:50.648005",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"cwhite\"} -SearchBase \"OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.828426",
            "end": "2025-01-09 22:34:54.523083",
            "failed": false,
            "item": {
                "description": "Utilisateur Basket 1",
                "display_name": "Chris White",
                "email": "cwhite@m2l.lan",
                "firstname": "Chris",
                "lastname": "White",
                "name": "cwhite",
                "password": "Btssio75000",
                "path": "OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:34:53.694657",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"jdavis\"} -SearchBase \"OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.827839",
            "end": "2025-01-09 22:34:57.662802",
            "failed": false,
            "item": {
                "description": "Utilisateur Basket 2",
                "display_name": "Jane Davis",
                "email": "jdavis@m2l.lan",
                "firstname": "Jane",
                "lastname": "Davis",
                "name": "jdavis",
                "password": "Btssio75000",
                "path": "OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:34:56.834963",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"kwilson\"} -SearchBase \"OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.875221",
            "end": "2025-01-09 22:35:00.741241",
            "failed": false,
            "item": {
                "description": "Utilisateur Basket 3",
                "display_name": "Kevin Wilson",
                "email": "kwilson@m2l.lan",
                "firstname": "Kevin",
                "lastname": "Wilson",
                "name": "kwilson",
                "password": "Btssio75000",
                "path": "OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:34:59.866020",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        }
    ]
}
2025-01-09 23:35:02,891 p=1760 u=root n=ansible | TASK [install_ad : Créer l'utilisateur si absent] ****************************************************************************************************************************************************************************
2025-01-09 23:35:02,934 p=1760 u=root n=ansible | skipping: [M2L-WSRV01] => (item=jdoe) 
2025-01-09 23:35:02,946 p=1760 u=root n=ansible | skipping: [M2L-WSRV01] => (item=asmith) 
2025-01-09 23:35:02,958 p=1760 u=root n=ansible | skipping: [M2L-WSRV01] => (item=bjones) 
2025-01-09 23:35:02,970 p=1760 u=root n=ansible | skipping: [M2L-WSRV01] => (item=cwhite) 
2025-01-09 23:35:02,981 p=1760 u=root n=ansible | skipping: [M2L-WSRV01] => (item=jdavis) 
2025-01-09 23:35:02,994 p=1760 u=root n=ansible | skipping: [M2L-WSRV01] => (item=kwilson) 
2025-01-09 23:35:02,995 p=1760 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-09 23:35:02,998 p=1760 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************************************************************************************
2025-01-09 23:35:02,998 p=1760 u=root n=ansible | M2L-WSRV01                 : ok=7    changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2025-01-09 23:36:54,865 p=1771 u=root n=ansible | PLAY [Test win_ping on windows] **********************************************************************************************************************************************************************************************
2025-01-09 23:36:54,877 p=1771 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] *******************************************************************************************************************************************************
2025-01-09 23:36:57,770 p=1771 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:36:57,781 p=1771 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] *****************************************************************************************************************************************************************************
2025-01-09 23:37:01,521 p=1771 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:37:01,524 p=1771 u=root n=ansible | TASK [install_ad : Vérifier si l'antériorité maximale du mot de passe est déjà configurée] ***********************************************************************************************************************************
2025-01-09 23:37:05,089 p=1771 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:37:05,094 p=1771 u=root n=ansible | TASK [install_ad : Modifier l'antériorité maximale du mot de passe dans la GPO par défaut] ***********************************************************************************************************************************
2025-01-09 23:37:08,437 p=1771 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:37:08,440 p=1771 u=root n=ansible | TASK [install_ad : Create Organizational Units] ******************************************************************************************************************************************************************************
2025-01-09 23:37:11,989 p=1771 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': '0m2l.lan', 'path': ''})
2025-01-09 23:37:15,370 p=1771 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'Ligues', 'path': 'OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:37:18,675 p=1771 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'tennis', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:37:21,974 p=1771 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'basket', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:37:21,996 p=1771 u=root n=ansible | TASK [install_ad : Vérifier si l'utilisateur existe] *************************************************************************************************************************************************************************
2025-01-09 23:37:25,297 p=1771 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdoe)
2025-01-09 23:37:28,301 p=1771 u=root n=ansible | changed: [M2L-WSRV01] => (item=asmith)
2025-01-09 23:37:31,334 p=1771 u=root n=ansible | changed: [M2L-WSRV01] => (item=bjones)
2025-01-09 23:37:34,356 p=1771 u=root n=ansible | changed: [M2L-WSRV01] => (item=cwhite)
2025-01-09 23:37:37,362 p=1771 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdavis)
2025-01-09 23:37:40,424 p=1771 u=root n=ansible | changed: [M2L-WSRV01] => (item=kwilson)
2025-01-09 23:37:40,447 p=1771 u=root n=ansible | TASK [install_ad : Debug user_check results] *********************************************************************************************************************************************************************************
2025-01-09 23:37:40,478 p=1771 u=root n=ansible | ok: [M2L-WSRV01] => {
    "user_check.results": [
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"jdoe\"} -SearchBase \"OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.828018",
            "end": "2025-01-09 22:37:23.194621",
            "failed": false,
            "item": {
                "description": "Utilisateur Tennis 1",
                "display_name": "John Doe",
                "email": "jdoe@m2l.lan",
                "firstname": "John",
                "lastname": "Doe",
                "name": "jdoe",
                "password": "Btssio75000",
                "path": "OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:37:22.366603",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "missing\r\n",
            "stdout_lines": [
                "missing"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"asmith\"} -SearchBase \"OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.782634",
            "end": "2025-01-09 22:37:26.226667",
            "failed": false,
            "item": {
                "description": "Utilisateur Tennis 2",
                "display_name": "Anna Smith",
                "email": "asmith@m2l.lan",
                "firstname": "Anna",
                "lastname": "Smith",
                "name": "asmith",
                "password": "Btssio75000",
                "path": "OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:37:25.444032",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"bjones\"} -SearchBase \"OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.858583",
            "end": "2025-01-09 22:37:29.256586",
            "failed": false,
            "item": {
                "description": "Utilisateur Tennis 3",
                "display_name": "Bob Jones",
                "email": "bjones@m2l.lan",
                "firstname": "Bob",
                "lastname": "Jones",
                "name": "bjones",
                "password": "Btssio75000",
                "path": "OU=tennis,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:37:28.398003",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"cwhite\"} -SearchBase \"OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.829260",
            "end": "2025-01-09 22:37:32.273945",
            "failed": false,
            "item": {
                "description": "Utilisateur Basket 1",
                "display_name": "Chris White",
                "email": "cwhite@m2l.lan",
                "firstname": "Chris",
                "lastname": "White",
                "name": "cwhite",
                "password": "Btssio75000",
                "path": "OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:37:31.444685",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"jdavis\"} -SearchBase \"OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.873992",
            "end": "2025-01-09 22:37:35.287744",
            "failed": false,
            "item": {
                "description": "Utilisateur Basket 2",
                "display_name": "Jane Davis",
                "email": "jdavis@m2l.lan",
                "firstname": "Jane",
                "lastname": "Davis",
                "name": "jdavis",
                "password": "Btssio75000",
                "path": "OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:37:34.413752",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        },
        {
            "ansible_loop_var": "item",
            "changed": true,
            "cmd": "Import-Module ActiveDirectory\n$User = Get-ADUser -Filter {SamAccountName -eq \"kwilson\"} -SearchBase \"OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan\"\nif ($User) { Write-Output \"exists\" } else { Write-Output \"missing\" }",
            "delta": "0:00:00.812399",
            "end": "2025-01-09 22:37:38.350435",
            "failed": false,
            "item": {
                "description": "Utilisateur Basket 3",
                "display_name": "Kevin Wilson",
                "email": "kwilson@m2l.lan",
                "firstname": "Kevin",
                "lastname": "Wilson",
                "name": "kwilson",
                "password": "Btssio75000",
                "path": "OU=basket,OU=ligues,OU=0m2l.lan,DC=m2l,DC=lan"
            },
            "rc": 0,
            "start": "2025-01-09 22:37:37.538036",
            "stderr": "",
            "stderr_lines": [],
            "stdout": "exists\r\n",
            "stdout_lines": [
                "exists"
            ]
        }
    ]
}
2025-01-09 23:37:40,480 p=1771 u=root n=ansible | TASK [install_ad : Créer l'utilisateur si absent] ****************************************************************************************************************************************************************************
2025-01-09 23:37:44,373 p=1771 u=root n=ansible | changed: [M2L-WSRV01] => (item=jdoe)
2025-01-09 23:37:44,386 p=1771 u=root n=ansible | skipping: [M2L-WSRV01] => (item=asmith) 
2025-01-09 23:37:44,399 p=1771 u=root n=ansible | skipping: [M2L-WSRV01] => (item=bjones) 
2025-01-09 23:37:44,415 p=1771 u=root n=ansible | skipping: [M2L-WSRV01] => (item=cwhite) 
2025-01-09 23:37:44,427 p=1771 u=root n=ansible | skipping: [M2L-WSRV01] => (item=jdavis) 
2025-01-09 23:37:44,439 p=1771 u=root n=ansible | skipping: [M2L-WSRV01] => (item=kwilson) 
2025-01-09 23:37:44,460 p=1771 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************************************************************************************
2025-01-09 23:37:44,460 p=1771 u=root n=ansible | M2L-WSRV01                 : ok=8    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
2025-01-09 23:40:02,077 p=1784 u=root n=ansible | PLAY [Test win_ping on windows] **********************************************************************************************************************************************************************************************
2025-01-09 23:40:02,110 p=1784 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] *******************************************************************************************************************************************************
2025-01-09 23:40:04,687 p=1784 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:40:04,698 p=1784 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] *****************************************************************************************************************************************************************************
2025-01-09 23:40:08,575 p=1784 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:40:08,577 p=1784 u=root n=ansible | TASK [install_ad : Vérifier si l'antériorité maximale du mot de passe est déjà configurée] ***********************************************************************************************************************************
2025-01-09 23:40:12,025 p=1784 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:40:12,028 p=1784 u=root n=ansible | TASK [install_ad : Modifier l'antériorité maximale du mot de passe dans la GPO par défaut] ***********************************************************************************************************************************
2025-01-09 23:40:15,504 p=1784 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:40:15,507 p=1784 u=root n=ansible | TASK [install_ad : Create Organizational Units] ******************************************************************************************************************************************************************************
2025-01-09 23:40:18,979 p=1784 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': '0m2l.lan', 'path': ''})
2025-01-09 23:40:22,206 p=1784 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'Ligues', 'path': 'OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:40:25,704 p=1784 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'tennis', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:40:29,135 p=1784 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'basket', 'path': 'OU=Ligues,OU=0m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:40:29,154 p=1784 u=root n=ansible | TASK [install_ad : Vérifier si l'utilisateur existe] *************************************************************************************************************************************************************************
2025-01-09 23:40:32,349 p=1784 u=root n=ansible | ok: [M2L-WSRV01] => (item=jdoe)
2025-01-09 23:40:35,387 p=1784 u=root n=ansible | ok: [M2L-WSRV01] => (item=asmith)
2025-01-09 23:40:38,416 p=1784 u=root n=ansible | ok: [M2L-WSRV01] => (item=bjones)
2025-01-09 23:40:41,461 p=1784 u=root n=ansible | ok: [M2L-WSRV01] => (item=cwhite)
2025-01-09 23:40:44,545 p=1784 u=root n=ansible | ok: [M2L-WSRV01] => (item=jdavis)
2025-01-09 23:40:47,635 p=1784 u=root n=ansible | ok: [M2L-WSRV01] => (item=kwilson)
2025-01-09 23:40:47,658 p=1784 u=root n=ansible | TASK [install_ad : Créer l'utilisateur si absent] ****************************************************************************************************************************************************************************
2025-01-09 23:40:47,703 p=1784 u=root n=ansible | skipping: [M2L-WSRV01] => (item=jdoe) 
2025-01-09 23:40:47,716 p=1784 u=root n=ansible | skipping: [M2L-WSRV01] => (item=asmith) 
2025-01-09 23:40:47,728 p=1784 u=root n=ansible | skipping: [M2L-WSRV01] => (item=bjones) 
2025-01-09 23:40:47,740 p=1784 u=root n=ansible | skipping: [M2L-WSRV01] => (item=cwhite) 
2025-01-09 23:40:47,752 p=1784 u=root n=ansible | skipping: [M2L-WSRV01] => (item=jdavis) 
2025-01-09 23:40:47,764 p=1784 u=root n=ansible | skipping: [M2L-WSRV01] => (item=kwilson) 
2025-01-09 23:40:47,769 p=1784 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-09 23:40:47,773 p=1784 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************************************************************************************
2025-01-09 23:40:47,773 p=1784 u=root n=ansible | M2L-WSRV01                 : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
2025-01-09 23:43:49,424 p=1805 u=root n=ansible | PLAY [Test win_ping on windows] **********************************************************************************************************************************************************************************************
2025-01-09 23:43:49,455 p=1805 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] *******************************************************************************************************************************************************
2025-01-09 23:43:52,520 p=1805 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:43:52,534 p=1805 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] *****************************************************************************************************************************************************************************
2025-01-09 23:43:56,285 p=1805 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:43:56,289 p=1805 u=root n=ansible | TASK [install_ad : Vérifier si l'antériorité maximale du mot de passe est déjà configurée] ***********************************************************************************************************************************
2025-01-09 23:43:59,795 p=1805 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:43:59,800 p=1805 u=root n=ansible | TASK [install_ad : Modifier l'antériorité maximale du mot de passe dans la GPO par défaut] ***********************************************************************************************************************************
2025-01-09 23:44:03,147 p=1805 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:44:03,149 p=1805 u=root n=ansible | TASK [install_ad : Create Organizational Units] ******************************************************************************************************************************************************************************
2025-01-09 23:44:06,664 p=1805 u=root n=ansible | changed: [M2L-WSRV01] => (item={'name': '0_m2l.lan', 'path': ''})
2025-01-09 23:44:10,125 p=1805 u=root n=ansible | changed: [M2L-WSRV01] => (item={'name': 'Ligues', 'path': 'OU=0_m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:44:13,639 p=1805 u=root n=ansible | changed: [M2L-WSRV01] => (item={'name': 'tennis', 'path': 'OU=Ligues,OU=0_m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:44:17,062 p=1805 u=root n=ansible | changed: [M2L-WSRV01] => (item={'name': 'basket', 'path': 'OU=Ligues,OU=0_m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:44:17,097 p=1805 u=root n=ansible | TASK [install_ad : Vérifier si l'utilisateur existe] *************************************************************************************************************************************************************************
2025-01-09 23:44:20,581 p=1805 u=root n=ansible | ok: [M2L-WSRV01] => (item=jdoe)
2025-01-09 23:44:23,786 p=1805 u=root n=ansible | ok: [M2L-WSRV01] => (item=asmith)
2025-01-09 23:44:26,950 p=1805 u=root n=ansible | ok: [M2L-WSRV01] => (item=bjones)
2025-01-09 23:44:30,216 p=1805 u=root n=ansible | ok: [M2L-WSRV01] => (item=cwhite)
2025-01-09 23:44:33,392 p=1805 u=root n=ansible | ok: [M2L-WSRV01] => (item=jdavis)
2025-01-09 23:44:36,667 p=1805 u=root n=ansible | ok: [M2L-WSRV01] => (item=kwilson)
2025-01-09 23:44:36,686 p=1805 u=root n=ansible | TASK [install_ad : Créer l'utilisateur si absent] ****************************************************************************************************************************************************************************
2025-01-09 23:44:40,665 p=1805 u=root n=ansible | failed: [M2L-WSRV01] (item=jdoe) => {"ansible_loop_var": "item", "changed": false, "distinguished_name": null, "item": {"description": "Utilisateur Tennis 1", "display_name": "John Doe", "email": "jdoe@m2l.lan", "firstname": "John", "lastname": "Doe", "name": "jdoe", "password": "Btssio75000", "path": "OU=tennis,OU=ligues,OU=0_m2l.lan,DC=m2l,DC=lan"}, "msg": "New-ADUser failed: Le compte spécifié existe déjà", "object_guid": null}
2025-01-09 23:44:44,380 p=1805 u=root n=ansible | failed: [M2L-WSRV01] (item=asmith) => {"ansible_loop_var": "item", "changed": false, "distinguished_name": null, "item": {"description": "Utilisateur Tennis 2", "display_name": "Anna Smith", "email": "asmith@m2l.lan", "firstname": "Anna", "lastname": "Smith", "name": "asmith", "password": "Btssio75000", "path": "OU=tennis,OU=ligues,OU=0_m2l.lan,DC=m2l,DC=lan"}, "msg": "New-ADUser failed: Le compte spécifié existe déjà", "object_guid": null}
2025-01-09 23:44:48,061 p=1805 u=root n=ansible | failed: [M2L-WSRV01] (item=bjones) => {"ansible_loop_var": "item", "changed": false, "distinguished_name": null, "item": {"description": "Utilisateur Tennis 3", "display_name": "Bob Jones", "email": "bjones@m2l.lan", "firstname": "Bob", "lastname": "Jones", "name": "bjones", "password": "Btssio75000", "path": "OU=tennis,OU=ligues,OU=0_m2l.lan,DC=m2l,DC=lan"}, "msg": "New-ADUser failed: Le compte spécifié existe déjà", "object_guid": null}
2025-01-09 23:44:51,696 p=1805 u=root n=ansible | failed: [M2L-WSRV01] (item=cwhite) => {"ansible_loop_var": "item", "changed": false, "distinguished_name": null, "item": {"description": "Utilisateur Basket 1", "display_name": "Chris White", "email": "cwhite@m2l.lan", "firstname": "Chris", "lastname": "White", "name": "cwhite", "password": "Btssio75000", "path": "OU=basket,OU=ligues,OU=0_m2l.lan,DC=m2l,DC=lan"}, "msg": "New-ADUser failed: Le compte spécifié existe déjà", "object_guid": null}
2025-01-09 23:44:55,301 p=1805 u=root n=ansible | failed: [M2L-WSRV01] (item=jdavis) => {"ansible_loop_var": "item", "changed": false, "distinguished_name": null, "item": {"description": "Utilisateur Basket 2", "display_name": "Jane Davis", "email": "jdavis@m2l.lan", "firstname": "Jane", "lastname": "Davis", "name": "jdavis", "password": "Btssio75000", "path": "OU=basket,OU=ligues,OU=0_m2l.lan,DC=m2l,DC=lan"}, "msg": "New-ADUser failed: Le compte spécifié existe déjà", "object_guid": null}
2025-01-09 23:44:58,953 p=1805 u=root n=ansible | failed: [M2L-WSRV01] (item=kwilson) => {"ansible_loop_var": "item", "changed": false, "distinguished_name": null, "item": {"description": "Utilisateur Basket 3", "display_name": "Kevin Wilson", "email": "kwilson@m2l.lan", "firstname": "Kevin", "lastname": "Wilson", "name": "kwilson", "password": "Btssio75000", "path": "OU=basket,OU=ligues,OU=0_m2l.lan,DC=m2l,DC=lan"}, "msg": "New-ADUser failed: Le compte spécifié existe déjà", "object_guid": null}
2025-01-09 23:44:58,975 p=1805 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************************************************************************************
2025-01-09 23:44:58,975 p=1805 u=root n=ansible | M2L-WSRV01                 : ok=6    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
2025-01-09 23:46:58,130 p=1816 u=root n=ansible | PLAY [Test win_ping on windows] **********************************************************************************************************************************************************************************************
2025-01-09 23:46:58,165 p=1816 u=root n=ansible | TASK [install_ad : Installer le rôle Active Directory Domain Services] *******************************************************************************************************************************************************
2025-01-09 23:47:01,110 p=1816 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:47:01,123 p=1816 u=root n=ansible | TASK [install_ad : Vérifier ou créer le domaine] *****************************************************************************************************************************************************************************
2025-01-09 23:47:04,831 p=1816 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:47:04,833 p=1816 u=root n=ansible | TASK [install_ad : Vérifier si l'antériorité maximale du mot de passe est déjà configurée] ***********************************************************************************************************************************
2025-01-09 23:47:08,334 p=1816 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:47:08,336 p=1816 u=root n=ansible | TASK [install_ad : Modifier l'antériorité maximale du mot de passe dans la GPO par défaut] ***********************************************************************************************************************************
2025-01-09 23:47:11,798 p=1816 u=root n=ansible | ok: [M2L-WSRV01]
2025-01-09 23:47:11,800 p=1816 u=root n=ansible | TASK [install_ad : Create Organizational Units] ******************************************************************************************************************************************************************************
2025-01-09 23:47:15,275 p=1816 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': '0_m2l.lan', 'path': ''})
2025-01-09 23:47:18,573 p=1816 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'Ligues', 'path': 'OU=0_m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:47:21,820 p=1816 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'tennis', 'path': 'OU=Ligues,OU=0_m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:47:25,136 p=1816 u=root n=ansible | ok: [M2L-WSRV01] => (item={'name': 'basket', 'path': 'OU=Ligues,OU=0_m2l.lan,DC=m2l,DC=lan'})
2025-01-09 23:47:25,160 p=1816 u=root n=ansible | TASK [install_ad : Vérifier si l'utilisateur existe] *************************************************************************************************************************************************************************
2025-01-09 23:47:28,445 p=1816 u=root n=ansible | ok: [M2L-WSRV01] => (item=jdoe)
2025-01-09 23:47:31,546 p=1816 u=root n=ansible | ok: [M2L-WSRV01] => (item=asmith)
2025-01-09 23:47:34,661 p=1816 u=root n=ansible | ok: [M2L-WSRV01] => (item=bjones)
2025-01-09 23:47:37,841 p=1816 u=root n=ansible | ok: [M2L-WSRV01] => (item=cwhite)
2025-01-09 23:47:40,919 p=1816 u=root n=ansible | ok: [M2L-WSRV01] => (item=jdavis)
2025-01-09 23:47:44,079 p=1816 u=root n=ansible | ok: [M2L-WSRV01] => (item=kwilson)
2025-01-09 23:47:44,113 p=1816 u=root n=ansible | TASK [install_ad : Créer l'utilisateur si absent] ****************************************************************************************************************************************************************************
2025-01-09 23:47:44,156 p=1816 u=root n=ansible | skipping: [M2L-WSRV01] => (item=jdoe) 
2025-01-09 23:47:44,170 p=1816 u=root n=ansible | skipping: [M2L-WSRV01] => (item=asmith) 
2025-01-09 23:47:44,180 p=1816 u=root n=ansible | skipping: [M2L-WSRV01] => (item=bjones) 
2025-01-09 23:47:44,190 p=1816 u=root n=ansible | skipping: [M2L-WSRV01] => (item=cwhite) 
2025-01-09 23:47:44,200 p=1816 u=root n=ansible | skipping: [M2L-WSRV01] => (item=jdavis) 
2025-01-09 23:47:44,210 p=1816 u=root n=ansible | skipping: [M2L-WSRV01] => (item=kwilson) 
2025-01-09 23:47:44,218 p=1816 u=root n=ansible | skipping: [M2L-WSRV01]
2025-01-09 23:47:44,222 p=1816 u=root n=ansible | PLAY RECAP *******************************************************************************************************************************************************************************************************************
2025-01-09 23:47:44,223 p=1816 u=root n=ansible | M2L-WSRV01                 : ok=6    changed=0    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   
