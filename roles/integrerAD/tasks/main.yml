---

- name: Inclure la configuration Basic
  include_tasks: "../../../tasks/configure_basic.yml"

- name: Configurer le DNS de la carte réseau Ethernet1
  ansible.windows.win_shell: |
    $AdapterName = "Ethernet1"
    $DnsServer = "172.16.2.61"
    Get-NetAdapter -Name $AdapterName | Set-DnsClientServerAddress -ServerAddresses $DnsServer
  args:
    executable: powershell

- name: Joindre la machine au domaine Active Directory
  microsoft.ad.membership:
    state: domain
    dns_domain_name: "m2l.lan"
    domain_admin_user: "{{ ad_admin.username }}"
    domain_admin_password: "{{ ad_admin.password }}"
    domain_ou_path: "OU=Serveurs,OU=0_m2l.lan,DC=m2l,DC=lan"
    hostname: "M2L-WSRV02"
    reboot: yes 

- name: Copier le script ConfigureRemotingForAnsible.ps1 sur la machine cible
  win_copy:
    src: ../files/ConfigureRemotingForAnsible.ps1
    dest: "C:\\ConfigureRemotingForAnsible.ps1"

- name: Vérifier la présence du script sur la machine cible
  win_stat:
    path: "C:\\ConfigureRemotingForAnsible.ps1"
  register: script_exists

- name: Exécuter le script ConfigureRemotingForAnsible.ps1
  win_shell: |
    Set-ExecutionPolicy RemoteSigned -Force
    C:\ConfigureRemotingForAnsible.ps1
  args:
    executable: powershell
  when: script_exists.stat.exists

- name: Supprimer le script après exécution (facultatif)
  win_file:
    path: "C:\\ConfigureRemotingForAnsible.ps1"
    state: absent


- name: activer  CredSSD sur le serveur
  ansible.windows.win_shell: |
    Enable-WSManCredSSP -Role Server -Force
    Enable-WSManCredSSP -Role Client -DelegateComputer 192.168.62.52 -Force
#    Restart-Service WinRM
  args:
    executable: powershell

- name: Test connection with ping
  ansible.windows.win_ping:
