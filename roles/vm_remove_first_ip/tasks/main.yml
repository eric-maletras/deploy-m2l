---
- name: Supprimer la configuration de ens32 dans le guest
  become: yes
  blockinfile:
    path: /etc/network/interfaces
    marker: "# {mark} ANSIBLE MANAGED BLOCK: Configuration de ens32"
    state: absent
  # Cette tâche s'exécute sur le guest ; assurez-vous que cet hôte est ciblé dans le play.
  # Vous pouvez ajouter une condition si besoin (ex: only if a variable remove_ens32_config est vraie).
  when: vm_os == "debian"

- name: Récupérer les informations de la VM
  community.vmware.vmware_guest_info:
    hostname: "{{ esxi_hostname }}"
    username: "{{ esxi_username }}"
    password: "{{ esxi_password }}"
    datacenter: "ha-datacenter"
    validate_certs: no
    name: "{{ inventory_hostname }}"
  delegate_to: localhost
  register: vm_info

- name: Récupérer l'adresse MAC de la première carte réseau (Network adapter 1)
  set_fact:
    mac_address_to_remove: "{{ vm_info.instance.hw_eth0.macaddress }}"

- name: Supprimer la carte réseau avec l'adresse MAC "{{ mac_address_to_remove }}"
  community.vmware.vmware_guest_network:
    hostname: "{{ esxi_hostname }}"
    username: "{{ esxi_username }}"
    password: "{{ esxi_password }}"
    validate_certs: no
    name: "{{ inventory_hostname }}"
    datacenter: "ha-datacenter"
    mac_address: "{{ mac_address_to_remove }}"
    state: absent
  delegate_to: localhost


- name: Rebooter la VM via ESXi
  vmware_guest:
    hostname: "{{ esxi_hostname }}"
    username: "{{ esxi_username }}"
    password: "{{ esxi_password }}"
    validate_certs: no
    name: "{{ inventory_hostname }}"
    state: restarted
  delegate_to: localhost
  # Cette tâche redémarre la VM via l'API ESXi.
