---
- name: Installer les extensions PHP requises
  apt:
    name:
      - php-intl
      - php-bz2
    state: present
  notify: Redémarrer Apache

- name: Vérifier si GLPI est déjà installé
  stat:
    path: "{{glpi_document_root}}/config/config_db.php"
  register: glpi_config_file

- name: Télécharger et extraire GLPI
  when: not glpi_config_file.stat.exists
  block:
    - name: Télécharger GLPI
      get_url:
        url: "https://github.com/glpi-project/glpi/releases/download/10.0.17/glpi-10.0.17.tgz"
        dest: "/tmp/glpi.tgz"
        mode: '0644'

    - name: Extraire GLPI
      ansible.builtin.unarchive:
        src: "/tmp/glpi.tgz"
        dest: "/var/www/"
        remote_src: yes

    - name: Définir les permissions correctes
      ansible.builtin.file:
        path: "{{glpi_document_root}}"
        owner: www-data
        group: www-data
        mode: '0755'
        recurse: yes

- name: Copier le fichier de configuration Apache pour GLPI
  template:
    src: "glpi.conf.j2"
    dest: "/etc/apache2/sites-available/glpi.conf"
    mode: '0644'

- name: Activer le site GLPI dans Apache
  command: a2ensite glpi.conf
  notify: Redémarrer Apache

- name: Vérifier que le module rewrite est activé
  command: a2enmod rewrite
  notify: Redémarrer Apache

- name: Récupérer la version de PHP installée
  command: php -r 'echo PHP_MAJOR_VERSION.".".PHP_MINOR_VERSION;'
  register: php_version_result
  changed_when: false

- name: Définir une variable de version PHP
  set_fact:
    php_version: "{{ php_version_result.stdout }}"

- name: Activer session.cookie_httponly
  lineinfile:
    path: "/etc/php/{{ php_version }}/apache2/php.ini"
    regexp: '^session.cookie_httponly'
    line: 'session.cookie_httponly = On'
  notify: Redémarrer Apache

- name: Recharger Apache pour appliquer la configuration
  service:
    name: apache2
    state: reloaded

- name: Vérifier si la base de données GLPI existe déjà
  mysql_db:
    name: "{{glpi_db_name}}"
    state: present
    login_user: "{{ mysql_root_user }}"
    login_password: "{{ mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  register: glpi_db_check

- name: Créer un utilisateur MySQL/MariaDB pour GLPI
  mysql_user:
    name: "{{glpi_db_user}}"
    password: "{{glpi_db_password}}"
    priv: "{{glpi_db_name}}.*:ALL"
    host: "localhost"
    state: present
    login_user: "{{ mysql_root_user }}"
    login_password: "{{ mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  when: glpi_db_check is changed

- name: Installation automatique de GLPI avec les paramètres définis
  command: >
    php bin/console -n db:install
    -H {{ glpi_db_host }}
    -P 3306
    -L fr_FR
    -d {{ glpi_db_name }}
    -u {{ glpi_db_user }}
    -p {{ glpi_db_password }}
    --reconfigure --force
  args:
    chdir: "/var/www/glpi"
  become: yes
  register: glpi_install_result
  changed_when: "'GLPI successfully installed' in glpi_install_result.stdout"

- name: Vérification et correction des permissions du fichier php-errors.log
  file:
    path: /var/www/glpi/files/_log/php-errors.log
    state: touch
    owner: www-data
    group: www-data
    mode: '664'

- name: Supprimer les sessions et le cache de GLPI après installation
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /var/www/glpi/files/_sessions/*
    - /var/www/glpi/files/_cache/*

- name: Modifier les mots de passe des comptes GLPI par défaut via SQL
  mysql_query:
    login_host: "{{ glpi_db_host }}"
    login_user: "{{ glpi_db_user }}"
    login_password: "{{ glpi_db_password }}"
    login_db: "{{ glpi_db_name }}"
    query: >
      UPDATE glpi_users
      SET password = MD5('{{ item.password }}')
      WHERE name = '{{ item.username }}';
  loop:
    - { username: "glpi", password: "{{ glpi_admin_password }}" }
    - { username: "tech", password: "{{ glpi_tech_password }}" }
    - { username: "normal", password: "{{ glpi_normal_password }}" }
    - { username: "post-only", password: "{{ glpi_postonly_password }}" }
  become: yes


- name: Supprimer le fichier install.php après installation
  file:
    path: /var/www/glpi/install/install.php
    state: absent
